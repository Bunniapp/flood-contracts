/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Book, BookInterface } from "../Book";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FloodRegistry",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feePct",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "Book_UnauthorizedRelayer",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__AmountOutTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__InvalidBasket",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__InvalidValue",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__NotWeth",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__TradeNotCancelable",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__TradeNotFillable",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__ZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__ZeroRegistry",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
    ],
    name: "FeePctSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amountOut",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "unwrapOutput",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "wrapInput",
        type: "bool",
      },
    ],
    name: "TradeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
    ],
    name: "cancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint128[]",
            name: "amounts",
            type: "uint128[]",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tradeIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "amountOut",
            type: "uint128",
          },
          {
            internalType: "bytes",
            name: "callbackData",
            type: "bytes",
          },
        ],
        internalType: "struct IBook.FillTradeArgs",
        name: "trade",
        type: "tuple",
      },
    ],
    name: "fillTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfTrades",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract FloodRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "unwrapOutput",
        type: "bool",
      },
    ],
    name: "requestTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tradesData",
    outputs: [
      {
        internalType: "enum TradeStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "unwrapOutput",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "wrapInput",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e060405260006001553480156200001657600080fd5b506040516200204e3803806200204e833981016040819052620000399162000157565b6000805460ff191690556001600160a01b03821615806200006257506001600160a01b0382163b155b15620000815760405163dacc695960e01b815260040160405180910390fd5b6001600160a01b03821660a0819052604080516315ab88c960e31b8152905163ad5c4648916004808201926020929091908290030181865afa158015620000cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f2919062000188565b6001600160a01b031660c05260808190526040518181527f9e67c173f0d1bf66a955764a6b072d74e095af185e539f9f6570fb91d788fca59060200160405180910390a15050620001af565b6001600160a01b03811681146200015457600080fd5b50565b600080604083850312156200016b57600080fd5b825162000178816200013e565b6020939093015192949293505050565b6000602082840312156200019b57600080fd5b8151620001a8816200013e565b9392505050565b60805160a05160c051611e4562000209600039600081816104440152818161073801528181610ab001528181610de201526111f601526000818161014c015281816111000152611399015260006101980152611e456000f3fe60806040526004361061007f5760003560e01c80637b1039991161004e5780637b1039991461013a578063a02cf93714610186578063cd805d5e146101c8578063d7ca6af3146101de57600080fd5b80632f24969a1461008b578063546d1fd4146100ad5780635c975abb146100c057806375ef5c99146100e857600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004611773565b6101fe565b005b6100ab6100bb366004611824565b610a05565b3480156100cc57600080fd5b5060005460ff1660405190151581526020015b60405180910390f35b3480156100f457600080fd5b5061012b6101033660046118b9565b60026020526000908152604090205460ff808216916101008104821691620100009091041683565b6040516100df939291906118e8565b34801561014657600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100df565b34801561019257600080fd5b506101ba7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100df565b3480156101d457600080fd5b506101ba60015481565b3480156101ea57600080fd5b506100ab6101f9366004611920565b610eec565b610207336110e1565b60408051606081018252600080825260208201819052918101829052906102cc61023184806119ac565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506102709250505060208601866119ac565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506102b29250505060608701604088016119f6565b60608701356102c760a0890160808a016119f6565b611196565b60008181526002602081905260409182902082516060810190935280549394509192839160ff90911690811115610305576103056118d2565b6002811115610316576103166118d2565b8152905460ff6101008204811615156020840152620100009091041615156040909101529150600182516002811115610351576103516118d2565b1461036f576040516308337f9b60e11b815260040160405180910390fd5b60028083526000828152602082905260409020835181548593839160ff19169060019084908111156103a3576103a36118d2565b0217905550602082015181546040909301511515620100000262ff000019911515610100029190911662ffff0019909316929092179190911790555060005b60016103ee84806119ac565b6103f9929150611a29565b8110156104fb57600061040c84806119ac565b8381811061041c5761041c611a42565b905060200201602081019061043191906119f6565b6001600160a01b0316036104a9576104a47f00000000000000000000000000000000000000000000000000000000000000003361047160208701876119ac565b8581811061048157610481611a42565b90506020020160208101906104969190611a6d565b6001600160801b03166111d2565b6104e9565b6104e96104b684806119ac565b838181106104c6576104c6611a42565b90506020020160208101906104db91906119f6565b3361047160208701876119ac565b806104f381611a8a565b9150506103e2565b50600061050e60c0840160a08501611a6d565b9050600061051f60c0850185611aa3565b905011156105cd576000336379ce106661053c60c0870187611aa3565b6040518363ffffffff1660e01b8152600401610559929190611aea565b6020604051808303816000875af1158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190611b19565b90506105ae60c0850160a08601611a6d565b6001600160801b0316816001600160801b031611156105cb578091505b505b6001600160801b0381166105e460208501856119ac565b60016105f360208801886119ac565b6105fe929150611a29565b81811061060d5761060d611a42565b90506020020160208101906106229190611a6d565b6001600160801b0316111561064a5760405163122e33cf60e31b815260040160405180910390fd5b61065a60a08401608085016119f6565b6040516001600160801b03831681526001600160a01b03919091169060608501359033907fba4aa4b355c690aad88778b59754bc78c60fd36ddb80c65036585c3723af9e549060200160405180910390a48160200151156108645761071a33306001600160801b0384166106ce87806119ac565b60016106da8a806119ac565b6106e5929150611a29565b8181106106f4576106f4611a42565b905060200201602081019061070991906119f6565b6001600160a01b0316929190611317565b604051632e1a7d4d60e01b81526001600160801b03821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561078457600080fd5b505af1158015610798573d6000803e3d6000fd5b50600092506107b091505060608501604086016119f6565b6001600160a01b0316826001600160801b031660405160006040518083038185875af1925050503d8060008114610803576040519150601f19603f3d011682016040523d82523d6000602084013e610808565b606091505b505090508061085e5760405162461bcd60e51b815260206004820152601860248201527f426f6f6b3a206661696c656420746f2073656e6420455448000000000000000060448201526064015b60405180910390fd5b5061088c565b61088c3361087860608601604087016119f6565b6001600160801b0384166106ce87806119ac565b600061089e60608501604086016119f6565b6001600160a01b03163b1115610a00576108be60608401604085016119f6565b6001600160a01b031663b54c45a66108dc60a08601608087016119f6565b6108e686806119ac565b6108f360208901896119ac565b876109ab6109018c806119ac565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109409250505060208e018e6119ac565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508d604001602081019061099391906119f6565b8e606001358f60800160208101906102c791906119f6565b6040518863ffffffff1660e01b81526004016109cd9796959493929190611bbd565b600060405180830381600087803b1580156109e757600080fd5b505af11580156109fb573d6000803e3d6000fd5b505050505b505050565b848314610a2557604051632f857cb360e01b815260040160405180910390fd5b6002851015610a4757604051632f857cb360e01b815260040160405180910390fd5b610a8386868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061138292505050565b60006001600160a01b03831615610a9a5782610a9c565b335b9050818015610b0d57506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168787610add600182611a29565b818110610aec57610aec611a42565b9050602002016020810190610b0191906119f6565b6001600160a01b031614155b15610b2b576040516398a5b0bf60e01b815260040160405180910390fd5b60005b84811015610c2457858582818110610b4857610b48611a42565b9050602002016020810190610b5d9190611a6d565b6001600160801b0316600003610b86576040516305dc4f8360e21b815260040160405180910390fd5b6000888883818110610b9a57610b9a611a42565b9050602002016020810190610baf91906119f6565b6001600160a01b0316148015610bf45750858582818110610bd257610bd2611a42565b9050602002016020810190610be79190611a6d565b6001600160801b03163414155b15610c1257604051631d57a23960e31b815260040160405180910390fd5b80610c1c81611a8a565b915050610b2e565b50336001600160a01b03166001547f90ac5503879c4ae16b9543ca5cbe50335963c0536ab915bfa9ac13a6b6de291a89898989878960003411604051610c709796959493929190611c15565b60405180910390a36000610ced88888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a91829185019084908082843760009201919091525050600154879250905033611196565b604080516060810182526001808252861515602080840191909152341515838501526000858152600291829052939093208251815495965092949093849260ff1990921691908490811115610d4457610d446118d2565b0217905550602082015181546040909301511515620100000262ff000019911515610100029190911662ffff00199093169290921791909117905560018054906000610d8f83611a8a565b919050555060005b610da2600187611a29565b811015610ee1576000898983818110610dbd57610dbd611a42565b9050602002016020810190610dd291906119f6565b6001600160a01b031603610e88577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0888884818110610e2157610e21611a42565b9050602002016020810190610e369190611a6d565b6001600160801b03166040518263ffffffff1660e01b81526004016000604051808303818588803b158015610e6a57600080fd5b505af1158015610e7e573d6000803e3d6000fd5b5050505050610ecf565b610ecf3330898985818110610e9f57610e9f611a42565b9050602002016020810190610eb49190611a6d565b6001600160801b03168c8c868181106106f4576106f4611a42565b80610ed981611a8a565b915050610d97565b505050505050505050565b6000610f6087878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a925089918291850190849080828437600092019190915250889250879150339050611196565b600081815260026020819052604080832081516060810190925280549495509293909291839160ff1690811115610f9957610f996118d2565b6002811115610faa57610faa6118d2565b8152905460ff6101008204811615156020840152620100009091041615156040909101529050600181516002811115610fe557610fe56118d2565b14611003576040516348fb103160e11b815260040160405180910390fd5b600082815260026020526040808220805462ffffff19169055513391849186917f4aaea9d289fcf796ee2d93ab7730c9a0afa79d03debf6528dd7f13a83613b7f491a460005b611054600189611a29565b811015610ee157600089898381811061106f5761106f611a42565b905060200201602081019061108491906119f6565b6001600160a01b0316146110cf576110cf8989838181106110a7576110a7611a42565b90506020020160208101906110bc91906119f6565b3389898581811061048157610481611a42565b806110d981611a8a565b915050611049565b6040516325ddec2360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690634bbbd84690602401602060405180830381865afa158015611147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116b9190611c67565b61119357604051631abbfe1360e01b81526001600160a01b0382166004820152602401610855565b50565b600085858585856040516020016111b1959493929190611c84565b60405160208183030381529060405280519060200120905095945050505050565b6001600160a01b03831661130357604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561124257600080fd5b505af1158015611256573d6000803e3d6000fd5b505050506000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146112a7576040519150601f19603f3d011682016040523d82523d6000602084013e6112ac565b606091505b50509050806112fd5760405162461bcd60e51b815260206004820152601960248201527f426f6f6b3a20455448207472616e73666572206661696c6564000000000000006044820152606401610855565b50505050565b610a006001600160a01b03841683836114de565b6040516001600160a01b03808516602483015283166044820152606481018290526112fd9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261150e565b604051635fba298f60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635fba298f906113ce908490600401611d3c565b602060405180830381865afa1580156113eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140f9190611c67565b61142c57604051632f857cb360e01b815260040160405180910390fd5b60005b81518110156114da576000611445826001611d89565b90505b82518110156114c75782818151811061146357611463611a42565b60200260200101516001600160a01b031683838151811061148657611486611a42565b60200260200101516001600160a01b0316036114b557604051632f857cb360e01b815260040160405180910390fd5b806114bf81611a8a565b915050611448565b50806114d281611a8a565b91505061142f565b5050565b6040516001600160a01b038316602482015260448101829052610a0090849063a9059cbb60e01b9060640161134b565b6000611563826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115e39092919063ffffffff16565b90508051600014806115845750808060200190518101906115849190611c67565b610a005760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610855565b60606115f284846000856115fa565b949350505050565b60608247101561165b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610855565b600080866001600160a01b031685876040516116779190611dc0565b60006040518083038185875af1925050503d80600081146116b4576040519150601f19603f3d011682016040523d82523d6000602084013e6116b9565b606091505b50915091506116ca878383876116d5565b979650505050505050565b6060831561174457825160000361173d576001600160a01b0385163b61173d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610855565b50816115f2565b6115f283838151156117595781518083602001fd5b8060405162461bcd60e51b81526004016108559190611ddc565b60006020828403121561178557600080fd5b813567ffffffffffffffff81111561179c57600080fd5b820160e081850312156117ae57600080fd5b9392505050565b60008083601f8401126117c757600080fd5b50813567ffffffffffffffff8111156117df57600080fd5b6020830191508360208260051b85010111156117fa57600080fd5b9250929050565b6001600160a01b038116811461119357600080fd5b801515811461119357600080fd5b6000806000806000806080878903121561183d57600080fd5b863567ffffffffffffffff8082111561185557600080fd5b6118618a838b016117b5565b9098509650602089013591508082111561187a57600080fd5b5061188789828a016117b5565b909550935050604087013561189b81611801565b915060608701356118ab81611816565b809150509295509295509295565b6000602082840312156118cb57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b606081016003851061190a57634e487b7160e01b600052602160045260246000fd5b9381529115156020830152151560409091015290565b6000806000806000806080878903121561193957600080fd5b863567ffffffffffffffff8082111561195157600080fd5b61195d8a838b016117b5565b9098509650602089013591508082111561197657600080fd5b5061198389828a016117b5565b909550935050604087013561199781611801565b80925050606087013590509295509295509295565b6000808335601e198436030181126119c357600080fd5b83018035915067ffffffffffffffff8211156119de57600080fd5b6020019150600581901b36038213156117fa57600080fd5b600060208284031215611a0857600080fd5b81356117ae81611801565b634e487b7160e01b600052601160045260246000fd5b81810381811115611a3c57611a3c611a13565b92915050565b634e487b7160e01b600052603260045260246000fd5b6001600160801b038116811461119357600080fd5b600060208284031215611a7f57600080fd5b81356117ae81611a58565b600060018201611a9c57611a9c611a13565b5060010190565b6000808335601e19843603018112611aba57600080fd5b83018035915067ffffffffffffffff821115611ad557600080fd5b6020019150368190038213156117fa57600080fd5b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600060208284031215611b2b57600080fd5b81516117ae81611a58565b8183526000602080850194508260005b85811015611b74578135611b5981611801565b6001600160a01b031687529582019590820190600101611b46565b509495945050505050565b8183526000602080850194508260005b85811015611b74578135611ba281611a58565b6001600160801b031687529582019590820190600101611b8f565b6001600160a01b038816815260a060208201819052600090611be2908301888a611b36565b8281036040840152611bf5818789611b7f565b6001600160801b0395909516606084015250506080015295945050505050565b60a081526000611c2960a08301898b611b36565b8281036020840152611c3c81888a611b7f565b6001600160a01b03969096166040840152505091151560608301521515608090910152949350505050565b600060208284031215611c7957600080fd5b81516117ae81611816565b855160009082906020808a01845b83811015611cb95781516001600160a01b0316855260208501945090820190600101611c92565b50508851818a0193925060005b81811015611ceb5784516001600160801b031684529382019392820192600101611cc6565b505050611d09818860601b6bffffffffffffffffffffffff19169052565b856014820152611d2d603482018660601b6bffffffffffffffffffffffff19169052565b60480198975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611d7d5783516001600160a01b031683529284019291840191600101611d58565b50909695505050505050565b80820180821115611a3c57611a3c611a13565b60005b83811015611db7578181015183820152602001611d9f565b50506000910152565b60008251611dd2818460208701611d9c565b9190910192915050565b6020815260008251806020840152611dfb816040850160208701611d9c565b601f01601f1916919091016040019291505056fea26469706673582212207ff0616b1517fd2fb5b3f769afd4b53d725fee87e719a5fce0fd3e44c2690d1164736f6c63430008130033";

type BookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Book__factory extends ContractFactory {
  constructor(...args: BookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _registry: PromiseOrValue<string>,
    _feePct: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Book> {
    return super.deploy(_registry, _feePct, overrides || {}) as Promise<Book>;
  }
  override getDeployTransaction(
    _registry: PromiseOrValue<string>,
    _feePct: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, _feePct, overrides || {});
  }
  override attach(address: string): Book {
    return super.attach(address) as Book;
  }
  override connect(signer: Signer): Book__factory {
    return super.connect(signer) as Book__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BookInterface {
    return new utils.Interface(_abi) as BookInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Book {
    return new Contract(address, _abi, signerOrProvider) as Book;
  }
}
