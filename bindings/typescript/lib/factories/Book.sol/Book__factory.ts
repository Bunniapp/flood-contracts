/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Book, BookInterface } from "../../Book.sol/Book";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FloodRegistry",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_safeBlockThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_disputeBondPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tradeRebatePct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerRefundPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feePct",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Book__AmountOutTooLow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blocksLeft",
        type: "uint256",
      },
    ],
    name: "Book__DisputePeriodNotOver",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__FeePctTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__InvalidParamsCombination",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Book__InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__InvalidValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Book__MaliciousCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__NotWeth",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__SameToken",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__SentToBlackHole",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "Book__TradeNotCancelable",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__TradeNotDisputable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "Book__TradeNotFilled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "Book__TradeNotInFillableState",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__ZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__ZeroRegistry",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__ZeroSafeBlockThreshold",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
    ],
    name: "FeePctSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "disputeBondPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tradeRebatePct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relayerRefundPct",
        type: "uint256",
      },
    ],
    name: "ParamsCombinationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSafeBlockThreshold",
        type: "uint256",
      },
    ],
    name: "SafeBlockThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "disputeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeDisputeSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "disputeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeDisputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeSettled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
    ],
    name: "cancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeBondPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "disputeTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToSend",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "fillTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfTrades",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "enum RequestState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "answer",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "onPriceSettled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract AllKnowingOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract FloodRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerRefundPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "receiveETH",
        type: "bool",
      },
    ],
    name: "requestTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "safeBlockThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "settleTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeRebatePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tradesData",
    outputs: [
      {
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "filledBy",
        type: "address",
      },
      {
        internalType: "enum TradeStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "unwrapOutput",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isEthTrade",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amountPaid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610180604052600080553480156200001657600080fd5b50604051620025fd380380620025fd8339810160408190526200003991620002da565b6001600160a01b038616620000615760405163dacc695960e01b815260040160405180910390fd5b84600003620000835760405163a95604b160e01b815260040160405180910390fd5b6001600160a01b03861661012081905260408051630175727b60e51b81529051632eae4f60916004808201926020929091908290030181865afa158015620000cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f5919062000330565b6001600160a01b0316610140816001600160a01b031681525050610120516001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000151573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000177919062000330565b6001600160a01b03166101605260808590526040518581527f882885d0e4612a71677644a9d70e58ca05fc5a1ea1b0875f6e46c315241bfe149060200160405180910390a1620001c984848462000282565b60a084905260c083905260e082905260408051858152602081018590529081018390527f8be1eb1cba497386c77933500158ebaaef9e51125fa5ebdfaa92139d320d43299060600160405180910390a16109c48111156200023d5760405163b768880160e01b815260040160405180910390fd5b6101008190526040518181527f9e67c173f0d1bf66a955764a6b072d74e095af185e539f9f6570fb91d788fca59060200160405180910390a15050505050506200037f565b806200028f838562000357565b6200029b919062000357565b606414620002bc57604051639327bc8760e01b815260040160405180910390fd5b505050565b6001600160a01b0381168114620002d757600080fd5b50565b60008060008060008060c08789031215620002f457600080fd5b86516200030181620002c1565b6020880151604089015160608a015160808b015160a0909b0151939c929b509099909850965090945092505050565b6000602082840312156200034357600080fd5b81516200035081620002c1565b9392505050565b808201808211156200037957634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c05160e051610100516101205161014051610160516121af6200044e60003960008181610d9f01528181610dff01528181610ec2015281816110810152818161159b01526116fb0152600081816102e0015281816105dd015281816106530152610aca0152600081816102940152818161180d01526118bf015260006103140152600081816101a701526108b00152600061037b015260008181610173015281816104c0015261060001526000818161012c01528181611225015261139601526121af6000f3fe6080604052600436106100ec5760003560e01c80637b1039991161008a578063ab6552e511610059578063ab6552e514610356578063c16402bb14610369578063cd805d5e1461039d578063e66a34ee146103b357600080fd5b80637b103999146102825780637dc0d1d0146102ce578063a02cf93714610302578063aa311ab41461033657600080fd5b806353906a59116100c657806353906a59146101955780636b16e8e6146101c9578063734d1627146101e957806375ef5c991461020957600080fd5b806309796dff146100f85780630ff0c00e1461011a578063391fe4e21461016157600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50610118610113366004611bd0565b6103d3565b005b34801561012657600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561016d57600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101a157600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101d557600080fd5b506101186101e4366004611c4b565b6107a9565b3480156101f557600080fd5b50610118610204366004611d30565b610abf565b34801561021557600080fd5b50610270610224366004611d7f565b60016020819052600091825260409091208054918101546002909101546001600160a01b0382169160ff600160a01b8204811692600160a81b8304821692600160b01b90049091169086565b60405161015896959493929190611dae565b34801561028e57600080fd5b506102b67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610158565b3480156102da57600080fd5b506102b67f000000000000000000000000000000000000000000000000000000000000000081565b34801561030e57600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561034257600080fd5b50610118610351366004611e06565b610c61565b610118610364366004611e7b565b610d93565b34801561037557600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a957600080fd5b5061014e60005481565b3480156103bf57600080fd5b506101186103ce366004611bd0565b611116565b60006103e4888888888888886112fa565b6000818152600160208181526040808420815160c08101835281548152938101546001600160a01b0381169385019390935294955092939192830190600160a01b900460ff16600381111561043b5761043b611d98565b600381111561044c5761044c611d98565b8152600182015460ff600160a81b8204811615156020840152600160b01b9091041615156040808301919091526002909201546060909101528151908201519192509061049a908290611372565b6104b7576040516331c0890d60e21b815260040160405180910390fd5b600060646104e57f00000000000000000000000000000000000000000000000000000000000000008b611f01565b6104ef9190611f18565b9050808360a001516105019190611f3a565b60a084015260036040840181905250600084815260016020818152604092839020865181559086015191810180546001600160a01b031981166001600160a01b039094169384178255938701518794929390926001600160a81b03191617600160a01b83600381111561057657610576611d98565b0217905550606082015160018201805460808501511515600160b01b0260ff60b01b19931515600160a81b029390931661ffff60a81b199091161791909117905560a0909101516002909101556105d86001600160a01b038c163330846113c6565b61064f7f000000000000000000000000000000000000000000000000000000000000000060647f000000000000000000000000000000000000000000000000000000000000000061062a8d6002611f01565b6106349190611f01565b61063e9190611f18565b6001600160a01b038e169190611437565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f7d3b58b8560200151338f868f8e8e8e8e6040516020016106ca9594939291909485526001600160a01b03938416602086015260408501929092529091166060830152608082015260a00190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016106f9959493929190611f9d565b6020604051808303816000875af1158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c9190611fd8565b9050856001600160a01b031681887f611d2790eebc2dfbd3329eb8ce89302d94d2b42c489cfd3ba8dae42977a3f9428760200151876040516107939291906001600160a01b03929092168252602082015260400190565b60405180910390a4505050505050505050505050565b60006107ba8b8b8b8b8b8b8b6112fa565b6000818152600160208181526040808420815160c08101835281548152938101546001600160a01b0381169385019390935294955092939192830190600160a01b900460ff16600381111561081157610811611d98565b600381111561082257610822611d98565b815260018281015460ff600160a81b8204811615156020850152600160b01b90910416151560408301526002909201546060909101529091508160400151600381111561087157610871611d98565b14610897576040516337d6ee8b60e11b8152600481018390526024015b60405180910390fd5b43815233602082015260026040820152600060646108d57f00000000000000000000000000000000000000000000000000000000000000008d611f01565b6108df9190611f18565b60a08301819052600084815260016020818152604092839020865181559086015191810180546001600160a01b031981166001600160a01b0390941693841782559387015194955086949193919290916001600160a81b03191617600160a01b83600381111561095157610951611d98565b0217905550606082015160018201805460808501511515600160b01b0260ff60b01b19931515600160a81b029390931661ffff60a81b199091161791909117905560a0909101516002909101556040516001600160a01b03881690899033907f81f3dddde62cb8d590d391999bc1a4c362a03cf74718fb3bd8195b46fc1c1009906109df908b815260200190565b60405180910390a46109fb6001600160a01b038e163383611551565b858415610a7d57604051633ce7083360e11b815260009033906379ce106690610a2a908a908a90600401611ff1565b6020604051808303816000875af1158015610a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6d9190611fd8565b905087811115610a7b578091505b505b8a811015610a9e5760405163122e33cf60e31b815260040160405180910390fd5b610aaf8d338c848760600151611581565b5050505050505050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b0a5760405163347b0c3360e11b815233600482015260240161088e565b600080808080610b1d60e0870187612020565b810190610b2a919061206e565b600081815260016020526040812060020154959a509398509196509450925090610b5490876120c0565b9050610b5f82611792565b6001600160a01b03831688857ff27fbe6db06bb8ac8a2b4206eef25be7c007d9fd8d53a772c5ffa4d7487952b2610b9c60408c0160208d016120d3565b610bac60e08d0160c08e016120f7565b604080516001600160a01b03909316835290151560208301520160405180910390a4610bde60e0880160c089016120f7565b15610c1c57610c17610bf66040890160208a016120d3565b82610c0760808b0160608c016120d3565b6001600160a01b03169190611551565b610c57565b610c57610c2f6080890160608a016120d3565b60008481526001602081905260409091200154309088908590600160a81b900460ff16611581565b5050505050505050565b6000610c72878787878787336112fa565b6000818152600160208181526040808420815160c08101835281548152938101546001600160a01b0381169385019390935294955092939192830190600160a01b900460ff166003811115610cc957610cc9611d98565b6003811115610cda57610cda611d98565b815260018281015460ff600160a81b8204811615156020850152600160b01b909104161515604083015260029092015460609091015290915081604001516003811115610d2957610d29611d98565b14610d4a5760405163069572a960e21b81526004810183905260240161088e565b610d5382611792565b6040513390839085907f4aaea9d289fcf796ee2d93ab7730c9a0afa79d03debf6528dd7f13a83613b7f490600090a4610c57883033898560800151611581565b610d9d86866117bc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614158015610ddf5750600034115b15610dfd576040516398a5b0bf60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316148015610e3e5750600034115b8015610e4a5750833414155b15610e6857604051631d57a23960e31b815260040160405180910390fd5b831580610e73575082155b15610e91576040516305dc4f8360e21b815260040160405180910390fd5b6001600160a01b038216610eb8576040516325f5bdf760e21b815260040160405180910390fd5b808015610ef757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031614155b15610f15576040516398a5b0bf60e01b815260040160405180910390fd5b600054604080516001600160a01b0388811682526020820188905291810186905284821660608201523392918916907f8a923a6574cd5d908fa4e840c47fb64b874b2116a88d073e5fdbd834033932769060800160405180910390a46000610f848787878787600054336112fa565b6040805160c0810182526000808252602080830182815260018486018181528915156060870152341515608087015260a08601859052878552928190529490922083518155915193820180546001600160a01b039095166001600160a01b03198616811782559151959650929491939192916001600160a81b03191617600160a01b83600381111561101857611018611d98565b0217905550606082015160018201805460808501511515600160b01b0260ff60b01b19931515600160a81b029390931661ffff60a81b199091161791909117905560a09091015160029091015560008054908061107483612114565b909155505034156110f8577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b1580156110da57600080fd5b505af11580156110ee573d6000803e3d6000fd5b505050505061110d565b61110d6001600160a01b0388163330886113c6565b50505050505050565b6000611127888888888888886112fa565b6000818152600160208181526040808420815160c08101835281548152938101546001600160a01b0381169385019390935294955092939192830190600160a01b900460ff16600381111561117e5761117e611d98565b600381111561118f5761118f611d98565b8152600182015460ff600160a81b8204811615156020840152600160b01b90910416151560408201526002918201546060909101528151919250826040015160038111156111df576111df611d98565b1461120057604051630f70cbe360e41b81526004810184905260240161088e565b61120e818360400151611372565b1561126857600061121f82436120c0565b611249907f00000000000000000000000000000000000000000000000000000000000000006120c0565b905080604051637be8522f60e01b815260040161088e91815260200190565b602082015160a083015160009061127f908b6120c0565b905061128a85611792565b856001600160a01b031687836001600160a01b03167fdeb6ee1bbbaaac1d6b7873a679d462110dd54d72915436622cc00525c2561cab866040516112d091815260200190565b60405180910390a46112ec6001600160a01b038d168383611551565b505050505050505050505050565b6040516bffffffffffffffffffffffff19606089811b8216602084015288811b82166034840152604883018890526068830187905285811b82166088840152609c830185905283901b1660bc82015260009060d001604051602081830303815290604052805190602001209050979650505050505050565b6000600282600381111561138857611388611d98565b1480156113bd57506113ba837f0000000000000000000000000000000000000000000000000000000000000000611f3a565b43105b90505b92915050565b6040516001600160a01b03808516602483015283166044820152606481018290526114319085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611956565b50505050565b8015806114b15750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561148b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114af9190611fd8565b155b61151c5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161088e565b6040516001600160a01b03831660248201526044810182905261154c90849063095ea7b360e01b906064016113fa565b505050565b6040516001600160a01b03831660248201526044810182905261154c90849063a9059cbb60e01b906064016113fa565b306001600160a01b038516036116f1578080156115cf57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316145b156116d857604051632e1a7d4d60e01b8152600481018390526001600160a01b03861690632e1a7d4d906024015b600060405180830381600087803b15801561161757600080fd5b505af115801561162b573d6000803e3d6000fd5b505050506000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461167c576040519150601f19603f3d011682016040523d82523d6000602084013e611681565b606091505b50509050806116d25760405162461bcd60e51b815260206004820152601960248201527f426f6f6b3a20455448207472616e73666572206661696c656400000000000000604482015260640161088e565b5061178b565b6116ec6001600160a01b0386168484611551565b61178b565b80801561172f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316145b15611776576117496001600160a01b0386168530856113c6565b604051632e1a7d4d60e01b8152600481018390526001600160a01b03861690632e1a7d4d906024016115fd565b61178b6001600160a01b0386168585856113c6565b5050505050565b6000908152600160208190526040822082815590810180546001600160b81b031916905560020155565b806001600160a01b0316826001600160a01b0316036117ee57604051636f8f06d360e01b815260040160405180910390fd5b60405163b5af090f60e01b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063b5af090f90602401602060405180830381865afa158015611854573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611878919061212d565b6118a0576040516378abcf6760e11b81526001600160a01b038316600482015260240161088e565b60405163b5af090f60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063b5af090f90602401602060405180830381865afa158015611906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192a919061212d565b611952576040516378abcf6760e11b81526001600160a01b038216600482015260240161088e565b5050565b60006119ab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a289092919063ffffffff16565b80519091501561154c57808060200190518101906119c9919061212d565b61154c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161088e565b6060611a378484600085611a3f565b949350505050565b606082471015611aa05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161088e565b600080866001600160a01b03168587604051611abc919061214a565b60006040518083038185875af1925050503d8060008114611af9576040519150601f19603f3d011682016040523d82523d6000602084013e611afe565b606091505b5091509150611b0f87838387611b1a565b979650505050505050565b60608315611b89578251600003611b82576001600160a01b0385163b611b825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161088e565b5081611a37565b611a378383815115611b9e5781518083602001fd5b8060405162461bcd60e51b815260040161088e9190612166565b6001600160a01b0381168114611bcd57600080fd5b50565b600080600080600080600060e0888a031215611beb57600080fd5b8735611bf681611bb8565b96506020880135611c0681611bb8565b955060408801359450606088013593506080880135611c2481611bb8565b925060a0880135915060c0880135611c3b81611bb8565b8091505092959891949750929550565b6000806000806000806000806000806101208b8d031215611c6b57600080fd5b8a35611c7681611bb8565b995060208b0135611c8681611bb8565b985060408b0135975060608b0135965060808b0135611ca481611bb8565b955060a08b0135945060c08b0135611cbb81611bb8565b935060e08b013592506101008b013567ffffffffffffffff80821115611ce057600080fd5b818d0191508d601f830112611cf457600080fd5b813581811115611d0357600080fd5b8e6020828501011115611d1557600080fd5b6020830194508093505050509295989b9194979a5092959850565b60008060408385031215611d4357600080fd5b82359150602083013567ffffffffffffffff811115611d6157600080fd5b83016101008186031215611d7457600080fd5b809150509250929050565b600060208284031215611d9157600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b8681526001600160a01b038616602082015260c0810160048610611de257634e487b7160e01b600052602160045260246000fd5b60408201959095529215156060840152901515608083015260a09091015292915050565b60008060008060008060c08789031215611e1f57600080fd5b8635611e2a81611bb8565b95506020870135611e3a81611bb8565b945060408701359350606087013592506080870135611e5881611bb8565b8092505060a087013590509295509295509295565b8015158114611bcd57600080fd5b60008060008060008060c08789031215611e9457600080fd5b8635611e9f81611bb8565b95506020870135611eaf81611bb8565b945060408701359350606087013592506080870135611ecd81611bb8565b915060a0870135611edd81611e6d565b809150509295509295509295565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176113c0576113c0611eeb565b600082611f3557634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156113c0576113c0611eeb565b60005b83811015611f68578181015183820152602001611f50565b50506000910152565b60008151808452611f89816020860160208601611f4d565b601f01601f19169290920160200192915050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a060808201819052600090611b0f90830184611f71565b600060208284031215611fea57600080fd5b5051919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000808335601e1984360301811261203757600080fd5b83018035915067ffffffffffffffff82111561205257600080fd5b60200191503681900382131561206757600080fd5b9250929050565b600080600080600060a0868803121561208657600080fd5b85359450602086013561209881611bb8565b93506040860135925060608601356120af81611bb8565b949793965091946080013592915050565b818103818111156113c0576113c0611eeb565b6000602082840312156120e557600080fd5b81356120f081611bb8565b9392505050565b60006020828403121561210957600080fd5b81356120f081611e6d565b60006001820161212657612126611eeb565b5060010190565b60006020828403121561213f57600080fd5b81516120f081611e6d565b6000825161215c818460208701611f4d565b9190910192915050565b6020815260006113bd6020830184611f7156fea26469706673582212209852e464febde6bafa918559e5d91dc5bb20bcb02125acfdafd7100946973c8364736f6c63430008110033";

type BookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Book__factory extends ContractFactory {
  constructor(...args: BookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _registry: PromiseOrValue<string>,
    _safeBlockThreshold: PromiseOrValue<BigNumberish>,
    _disputeBondPct: PromiseOrValue<BigNumberish>,
    _tradeRebatePct: PromiseOrValue<BigNumberish>,
    _relayerRefundPct: PromiseOrValue<BigNumberish>,
    _feePct: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Book> {
    return super.deploy(
      _registry,
      _safeBlockThreshold,
      _disputeBondPct,
      _tradeRebatePct,
      _relayerRefundPct,
      _feePct,
      overrides || {}
    ) as Promise<Book>;
  }
  override getDeployTransaction(
    _registry: PromiseOrValue<string>,
    _safeBlockThreshold: PromiseOrValue<BigNumberish>,
    _disputeBondPct: PromiseOrValue<BigNumberish>,
    _tradeRebatePct: PromiseOrValue<BigNumberish>,
    _relayerRefundPct: PromiseOrValue<BigNumberish>,
    _feePct: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _registry,
      _safeBlockThreshold,
      _disputeBondPct,
      _tradeRebatePct,
      _relayerRefundPct,
      _feePct,
      overrides || {}
    );
  }
  override attach(address: string): Book {
    return super.attach(address) as Book;
  }
  override connect(signer: Signer): Book__factory {
    return super.connect(signer) as Book__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BookInterface {
    return new utils.Interface(_abi) as BookInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Book {
    return new Contract(address, _abi, signerOrProvider) as Book;
  }
}
