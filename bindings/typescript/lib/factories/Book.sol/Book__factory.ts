/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Book, BookInterface } from "../../Book.sol/Book";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FloodRegistry",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_safeBlockThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_disputeBondPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tradeRebatePct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerRefundPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feePct",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Book__AmountOutTooLow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blocksLeft",
        type: "uint256",
      },
    ],
    name: "Book__DisputePeriodNotOver",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__FeePctTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__InvalidParamsCombination",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Book__InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__InvalidValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Book__MaliciousCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__NotWeth",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__SameToken",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__SentToBlackHole",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "Book__TradeNotCancelable",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__TradeNotDisputable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "Book__TradeNotFilled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "Book__TradeNotInFillableState",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__ZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__ZeroRegistry",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__ZeroSafeBlockThreshold",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
    ],
    name: "FeePctSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "disputeBondPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tradeRebatePct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relayerRefundPct",
        type: "uint256",
      },
    ],
    name: "ParamsCombinationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSafeBlockThreshold",
        type: "uint256",
      },
    ],
    name: "SafeBlockThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "disputeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeDisputeSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "disputeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeDisputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeSettled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
    ],
    name: "cancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeBondPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "disputeTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToSend",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "fillTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfTrades",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "enum RequestState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "answer",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "onPriceSettled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract AllKnowingOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract FloodRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerRefundPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "receiveETH",
        type: "bool",
      },
    ],
    name: "requestTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "safeBlockThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "settleTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeRebatePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tradesData",
    outputs: [
      {
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "filledBy",
        type: "address",
      },
      {
        internalType: "enum TradeStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "unwrapOutput",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isEthTrade",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amountPaid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101806040818152346200033b5760c08262001fc1803803809162000025828562000340565b8339810103126200033b5781516001600160a01b0391828216908183036200033b576004946020908181015190838101519160608201519060a060808401519301519860009788805580156200032b5782156200031b5786906101209a8b5288519c8d8092630175727b60e51b82525afa97881562000310578098620002c8575b6004999a9b5061014098895286828c511689519b8c80926315ab88c960e31b82525afa998a15620002bc57819a62000262575b5050508460008051602062001fa183398151915291610160998a52806080528751908152a1606462000117836200011184876200037a565b6200037a565b036200025157916060917f8be1eb1cba497386c77933500158ebaaef9e51125fa5ebdfaa92139d320d4329938260a0528060c0528160e05286519283528583015285820152a16109c4861162000240577f9e67c173f0d1bf66a955764a6b072d74e095af185e539f9f6570fb91d788fca590610100968088528351908152a15192611c0294856200039f863960805185818161020d01528181610fb40152611b2c015260a051858181610f790152818161108b015261117c015260c051856102bf015260e051858181610d0f0152610f3e015251846108b1015251838181610351015281816103b0015261092f0152518281816108ea01528181610a31015281816111d2015281816112b201526114180152518181816103f0015281816119f30152611ae50152f35b815163b768880160e01b8152600490fd5b8451639327bc8760e01b8152600490fd5b90919299508681813d8311620002b4575b6200027f818362000340565b81010312620002b057519182168203620002ad5750968460008051602062001fa183398151915238620000d9565b80fd5b5080fd5b503d62000273565b508751903d90823e3d90fd5b9750998581813d831162000308575b620002e3818362000340565b8101031262000304575199808b168b03620003045798998a999097620000a6565b8780fd5b503d620002d7565b8751903d90823e3d90fd5b875163a95604b160e01b81528c90fd5b875163dacc695960e01b81528c90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200036457604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116200038857565b634e487b7160e01b600052601160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c806309796dff14610fd75780630ff0c00e14610f9c578063391fe4e214610f6157806353906a5914610f265780636b16e8e614610bd4578063734d1627146109f157806375ef5c991461095e5780637b103999146109195780637dc0d1d0146108d4578063a02cf93714610899578063aa311ab41461074e578063ab6552e5146102e2578063c16402bb146102a7578063cd805d5e1461028a5763e66a34ee146100cc575061000e565b346102875761013e906100f16100e136611537565b9491819793858794899799611b55565b93848652600160205260408620926040519061010c8261158d565b845482526001850154946002602084019160ff60018060a01b03988981168552604087019d8e838360a01c16906115f5565b818160a81c161515606088015260b01c161515608086015201549260a081019384525199805160048110156102735760020361025a5751600481101561024657610188908b611b0e565b6101fc576020866101f99a9b9594936101ea6101cc837fdeb6ee1bbbaaac1d6b7873a679d462110dd54d72915436622cc00525c2561cab9651169b8c9751906118fd565b9b600052600160205260006002604082208281558260018201550155565b6040519687521694a4166118bc565b80f35b602461023161020b8c436118fd565b7f00000000000000000000000000000000000000000000000000000000000000006118fd565b60405190637be8522f60e01b82526004820152fd5b634e487b7160e01b8a52602160045260248afd5b604051630f70cbe360e41b8152600481018a9052602490fd5b634e487b7160e01b8b52602160045260248bfd5b80fd5b503461028757806003193601126102875760209054604051908152f35b503461028757806003193601126102875760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5060c0366003190112610287576102f76114dc565b906103006114f7565b61030861150d565b60a435151560a4350361074a576001600160a01b03848116908316146107385760405163b5af090f60e01b81526001600160a01b038581166004830152602090829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa9081156106ed578491610719575b50156106f85760405163b5af090f60e01b81526001600160a01b038381166004830152602090829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa9081156106ed5784916106be575b501561069d576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116919085168214801580610694575b61061a578061068b575b8061067f575b61066d576044359283158015610663575b610651576001600160a01b038216801561063f5760a4358061062c575b61061a576104c59286549160405160018060a01b03851681528760208201526064359182604083015260608201528333917f8a923a6574cd5d908fa4e840c47fb64b874b2116a88d073e5fdbd8340339327660808d60018060a01b031692a48633948a611b55565b60405134151595916104d68261158d565b8582526020820186815260408301600181526060840160a4351515815260808501908a825260a08601948a86528a52600160205260408a2095518655600186019360018060a01b03905116845493519160048310156106065751925160a09290921b60ff60a01b166001600160b81b0319909416179290921790151560a81b60ff60a81b161790151560b01b60ff60b01b16179055516002919091015583549460001986146105f257600185960185556000146105da5750803b156105d6578290600460405180948193630d0e30db60e41b83525af180156105cb576105bb57505080f35b6105c4906115bf565b6102875780f35b6040513d84823e3d90fd5b5050fd5b6101f9935030915033906001600160a01b0316611617565b634e487b7160e01b85526011600452602485fd5b634e487b7160e01b8c52602160045260248cfd5b6040516398a5b0bf60e01b8152600490fd5b506001600160a01b03821684141561045d565b6040516325f5bdf760e21b8152600490fd5b6040516305dc4f8360e21b8152600490fd5b5060643515610440565b604051631d57a23960e31b8152600490fd5b5060443534141561042f565b50341515610429565b5034151561041f565b6040516378abcf6760e11b81526001600160a01b0383166004820152602490fd5b6106e0915060203d6020116106e6575b6106d881836115d3565b810190611672565b386103e0565b503d6106ce565b6040513d86823e3d90fd5b6040516378abcf6760e11b81526001600160a01b0385166004820152602490fd5b610732915060203d6020116106e6576106d881836115d3565b38610381565b604051636f8f06d360e01b8152600490fd5b8280fd5b50346102875760c0366003190112610287576107686114dc565b906107716114f7565b9160443561079361078061150d565b9460a43580963392856064359188611b55565b93848452600160205260408420604051916107ad8361158d565b8154835260018201549160018060a01b0393848416602082015260a0600260408301936107df60ff88851c16866115f5565b60ff8760a81c161515606085015260ff608085019760b01c161515875201549101525160048110156108855760010361086c57866108386101f99798600052600160205260006002604082208281558260018201550155565b33917f4aaea9d289fcf796ee2d93ab7730c9a0afa79d03debf6528dd7f13a83613b7f48980a4511515923391309116611938565b60405163069572a960e21b815260048101889052602490fd5b634e487b7160e01b87526021600452602487fd5b503461028757806003193601126102875760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346102875780600319360112610287576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346102875780600319360112610287576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461028757602036600319011261028757600435815260016020526040812090815490600183015492600260ff8560a01c169101549160405193845260018060a01b038516602085015260048210156109dd575060c09360ff916040850152818160a81c161515606085015260b01c161515608083015260a0820152f35b634e487b7160e01b81526021600452602490fd5b503461028757600319604036820112610bd0576024359067ffffffffffffffff808311610bcc5761010083360392830112610bcc576001600160a01b03917f000000000000000000000000000000000000000000000000000000000000000083163303610bb45760e48401359060221901811215610bac578301906004820135908111610bac5760248201908036038213610bb0578260a09181010312610bac57610a9e60448301611523565b90610aab60848401611523565b93610b52610acf60a486013593848a526001602052600260408b20015490356118fd565b95610af184600052600160205260006002604082208281558260018201550155565b6024880195610aff87611917565b908460c48b0193610b0f8561192b565b82604051951685521515602085015216917ff27fbe6db06bb8ac8a2b4206eef25be7c007d9fd8d53a772c5ffa4d7487952b26040606460043594013592a461192b565b15610b7857505050610b72610b6c60646101f99501611917565b91611917565b906118bc565b9091939250610b8c60646101f99601611917565b918652600160205260ff600160408820015460a81c169316903090611938565b8480fd5b8580fd5b60405163347b0c3360e11b8152336004820152602490fd5b8380fd5b5080fd5b50346102875761012036600319011261028757610bef6114dc565b90610bf86114f7565b610c0061150d565b9060c4356001600160a01b038116900361074a5767ffffffffffffffff806101043511610bcc5736602361010435011215610bcc5761010435600401351161074a5736602461010435600401356101043501011161074a57610c6f60c43560a43584606435604435868a611b55565b80845260016020526040842094600260405196610c8b8861158d565b8054885260018101546001600160a01b03811660208a015260ff90610cb960a082901c831660408c016115f5565b818160a81c16151560608b015260b01c1615156080890152015460a087015260408601516004811015610f1257600103610ef95760643560e43510610ee757438652336020870152600260408701526064610d367f0000000000000000000000000000000000000000000000000000000000000000604435611893565b04918260a088015285526001602052604085208651815560018060a01b0360208801511660018201549060408901516004811015610ed35760608a015160808b015160a092831b60ff60a01b166001600160b81b03199095169093179390931792151560a81b60ff60a81b169290921790151560b01b60ff60b01b1617600183015587015160029091015560405160e4358152610e1892919060c4356001600160a01b03169060a4359033907f81f3dddde62cb8d590d391999bc1a4c362a03cf74718fb3bd8195b46fc1c100990602090a433906001600160a01b03166118bc565b6101043560040135610e44575b60606101f99394015115159160e43591339060018060a01b0316611938565b333b1561074a57604051633ce7083360e11b8152602060048201526101043560040135602482015261010435600401356024610104350160448301378360446101043560040135830101528381604481601f19601f61010435600401350116810103018183335af180156106ed57610ebd575b50610e25565b6101f993610ecc6060926115bf565b9350610eb7565b634e487b7160e01b89526021600452602489fd5b60405163122e33cf60e31b8152600490fd5b6040516337d6ee8b60e11b815260048101839052602490fd5b634e487b7160e01b86526021600452602486fd5b503461028757806003193601126102875760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461028757806003193601126102875760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461028757806003193601126102875760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461028757610ffb610fe936611537565b96919395929084889288839887611b55565b808752600160205260408720916002604051936110178561158d565b8054855260018101546001600160a01b038116602087015260ff9061104560a082901c8316604089016115f5565b818160a81c161515606088015260b01c1615156080860152015460a0840152825193604084015160048110156102465761107f9086611b0e565b156114ca5760646110b07f000000000000000000000000000000000000000000000000000000000000000089611893565b04966110c08860a087015161190a565b60a086015260036040860152838a52600160205260408a208551815560018060a01b03602087015116600182015490604088015160048110156114b657606089015160808a015160a092831b60ff60a01b166001600160b81b03199095169093179390931792151560a81b60ff60a81b169290921790151560b01b60ff60b01b161760018301558601516002909101556111658830336001600160a01b038716611617565b6001600160ff1b03811681036114a25760646111a47f00000000000000000000000000000000000000000000000000000000000000008360011b611893565b0490811580156113fa575b156113965760405163095ea7b360e01b6020808301919091526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602483015260448083019490945292815291946112ad92611227906112186064826115d3565b6001600160a01b03871661168a565b8686015160408051808901949094526001600160a01b0395861690840152606083018a90528b8516608084015260a0838101929092529082529092169161126d8161158d565b604051988994859463f7d3b58b60e01b8652600486015233602486015260018060a01b03166044850152606484015260a0608484015260a4830190611853565b0381897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af193841561138b578694611335575b50602090810151604080516001600160a01b0392831681529283019390935294909416937f611d2790eebc2dfbd3329eb8ce89302d94d2b42c489cfd3ba8dae42977a3f9429190a480f35b919093506020823d602011611383575b81611352602093836115d3565b81010312610bb0579051927f611d2790eebc2dfbd3329eb8ce89302d94d2b42c489cfd3ba8dae42977a3f9426112ea565b3d9150611345565b6040513d88823e3d90fd5b60405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608490fd5b50604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526020908290604490829089165afa908115611497578c91611461575b50156111af565b90506020813d60201161148f575b8161147c602093836115d3565b8101031261148b57513861145a565b8b80fd5b3d915061146f565b6040513d8e823e3d90fd5b634e487b7160e01b8a52601160045260248afd5b634e487b7160e01b8e52602160045260248efd5b6040516331c0890d60e21b8152600490fd5b600435906001600160a01b03821682036114f257565b600080fd5b602435906001600160a01b03821682036114f257565b608435906001600160a01b03821682036114f257565b35906001600160a01b03821682036114f257565b60e09060031901126114f2576001600160a01b0360043581811681036114f2579160243582811681036114f25791604435916064359160843581811681036114f2579160a4359160c43590811681036114f25790565b60c0810190811067ffffffffffffffff8211176115a957604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116115a957604052565b90601f8019910116810190811067ffffffffffffffff8211176115a957604052565b60048210156116015752565b634e487b7160e01b600052602160045260246000fd5b6040516323b872dd60e01b60208201526001600160a01b03928316602482015292909116604483015260648083019390935291815260a081019181831067ffffffffffffffff8411176115a9576116709260405261168a565b565b908160209103126114f2575180151581036114f25790565b60408051908101916001600160a01b031667ffffffffffffffff8311828410176115a9576116fa926040526000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af16116f4611776565b916117b6565b8051908161170757505050565b8280611717938301019101611672565b1561171f5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b3d156117b1573d9067ffffffffffffffff82116115a957604051916117a5601f8201601f1916602001846115d3565b82523d6000602084013e565b606090565b9192901561181857508151156117ca575090565b3b156117d35790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561182b5750805190602001fd5b60405162461bcd60e51b81526020600482015290819061184f906024830190611853565b0390fd5b919082519283825260005b84811061187f575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161185e565b818102929181159184041417156118a657565b634e487b7160e01b600052601160045260246000fd5b60405163a9059cbb60e01b60208201526001600160a01b03929092166024830152604480830193909352918152611670916118f86064836115d3565b61168a565b919082039182116118a657565b919082018092116118a657565b356001600160a01b03811681036114f25790565b3580151581036114f25790565b92936001600160a01b039391908482163014611a1c57806119ef575b156119e35790611968858593309084611617565b1691823b156114f2576040518093632e1a7d4d60e01b82528160246000968780948a60048401525af180156106ed576119ce575b5082809481938293839183156119c4575b1690f1156119b85750565b604051903d90823e3d90fd5b6108fc92506119ad565b6119db90939192936115bf565b91903861199c565b90611670949350611617565b50837f00000000000000000000000000000000000000000000000000000000000000001684831614611954565b929392905080611ae1575b15611ad557811691823b156114f2576040518093632e1a7d4d60e01b82528160246000968780948a60048401525af180156106ed57611ac0575b50829383928392165af1611a73611776565b5015611a7b57565b60405162461bcd60e51b815260206004820152601960248201527f426f6f6b3a20455448207472616e73666572206661696c6564000000000000006044820152606490fd5b611acd90939192936115bf565b919038611a61565b611670939291506118bc565b50817f00000000000000000000000000000000000000000000000000000000000000001682821614611a27565b906004811015611601576002149081611b25575090565b611b5091507f000000000000000000000000000000000000000000000000000000000000000061190a565b431090565b909395929491956040519560208701976bffffffffffffffffffffffff19809781809660601b168b5260601b1660348901526048880152606887015260601b166088850152609c84015260601b1660bc82015260b0815260e0810181811067ffffffffffffffff8211176115a9576040525190209056fea26469706673582212206f852bd2b0092d5059e98c035c5e8d2519d0d3075fd61eb21377a37377d19ebc64736f6c63430008110033882885d0e4612a71677644a9d70e58ca05fc5a1ea1b0875f6e46c315241bfe14";

type BookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Book__factory extends ContractFactory {
  constructor(...args: BookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _registry: PromiseOrValue<string>,
    _safeBlockThreshold: PromiseOrValue<BigNumberish>,
    _disputeBondPct: PromiseOrValue<BigNumberish>,
    _tradeRebatePct: PromiseOrValue<BigNumberish>,
    _relayerRefundPct: PromiseOrValue<BigNumberish>,
    _feePct: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Book> {
    return super.deploy(
      _registry,
      _safeBlockThreshold,
      _disputeBondPct,
      _tradeRebatePct,
      _relayerRefundPct,
      _feePct,
      overrides || {}
    ) as Promise<Book>;
  }
  override getDeployTransaction(
    _registry: PromiseOrValue<string>,
    _safeBlockThreshold: PromiseOrValue<BigNumberish>,
    _disputeBondPct: PromiseOrValue<BigNumberish>,
    _tradeRebatePct: PromiseOrValue<BigNumberish>,
    _relayerRefundPct: PromiseOrValue<BigNumberish>,
    _feePct: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _registry,
      _safeBlockThreshold,
      _disputeBondPct,
      _tradeRebatePct,
      _relayerRefundPct,
      _feePct,
      overrides || {}
    );
  }
  override attach(address: string): Book {
    return super.attach(address) as Book;
  }
  override connect(signer: Signer): Book__factory {
    return super.connect(signer) as Book__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BookInterface {
    return new utils.Interface(_abi) as BookInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Book {
    return new Contract(address, _abi, signerOrProvider) as Book;
  }
}
