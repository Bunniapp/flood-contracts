/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Book, BookInterface } from "../../Book.sol/Book";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_safeBlockThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_disputeBondPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tradeRebatePct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerRefundPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feePct",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Book__AmountOutTooLow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blocksLeft",
        type: "uint256",
      },
    ],
    name: "Book__DisputePeriodNotOver",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__DisputePeriodOver",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__FeePctTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__InvalidFeeCombination",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Book__InvalidToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Book__MaliciousCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__NotTrader",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__SameToken",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__SentToBlackHole",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "Book__TradeNotCancelable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "Book__TradeNotFilled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "Book__TradeNotInFillableState",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Book__UnsafeTokenToWhitelist",
    type: "error",
  },
  {
    inputs: [],
    name: "Book__ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "disputeBondPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tradeRebatePct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relayerRefundPct",
        type: "uint256",
      },
    ],
    name: "FeeCombinationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
    ],
    name: "FeePctSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSafeBlockThreshold",
        type: "uint256",
      },
    ],
    name: "SafeBlockThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "TokenWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "disputeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeDisputeSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "disputeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeDisputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TradeSettled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "cancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeBondPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "disputeTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToSend",
        type: "uint256",
      },
    ],
    name: "fillTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "filledAtBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "filledBy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfTrades",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract ERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "enum RequestState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "answer",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "onPriceSettled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract AllKnowingOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerRefundPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "requestTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "safeBlockThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "settleTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "status",
    outputs: [
      {
        internalType: "enum TradeStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeRebatePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "whitelistToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61014060405260006001553480156200001757600080fd5b506040516200191e3803806200191e8339810160408190526200003a91620001b4565b600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506001600160a01b0386166101205260808590526040518581527f882885d0e4612a71677644a9d70e58ca05fc5a1ea1b0875f6e46c315241bfe149060200160405180910390a181620000ce848662000215565b620000da919062000215565b606414620000fb57604051636683d88d60e01b815260040160405180910390fd5b60a084905260c083905260e082905260408051858152602081018590529081018390527ff33486d12ebec978385318eaf8163e096679d7eab14d4def8f26b7a5fda0f5829060600160405180910390a16109c48111156200016f5760405163b768880160e01b815260040160405180910390fd5b6101008190526040518181527f9e67c173f0d1bf66a955764a6b072d74e095af185e539f9f6570fb91d788fca59060200160405180910390a15050505050506200023d565b60008060008060008060c08789031215620001ce57600080fd5b86516001600160a01b0381168114620001e657600080fd5b6020880151604089015160608a015160808b015160a0909b0151939c929b509099909850965090945092505050565b808201808211156200023757634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c05160e0516101005161012051611644620002da6000396000818161024f01528181610482015281816104ab01528181610598015281816106860152610983015260006102e7015260008181610215015281816109270152610e8901526000818161030e01526109f00152600081816101be015261043901526000818161014b01528181610e1c0152610fb301526116446000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638b2cdb9d116100ad578063c16402bb11610071578063c16402bb14610309578063cd805d5e14610330578063d70e3dfd14610339578063daf9c21014610362578063e66a34ee1461039557600080fd5b80638b2cdb9d146102895780638da5cb5b1461029c5780639170c05b146102af5780639501325f146102c2578063a02cf937146102e257600080fd5b8063391fe4e2116100f4578063391fe4e2146101b957806352ad0d5e146101e057806353906a5914610210578063734d1627146102375780637dc0d1d01461024a57600080fd5b806309796dff146101315780630ff0c00e146101465780630ffb1d8b1461018057806313af4035146101935780632d7e8e1c146101a6575b600080fd5b61014461013f3660046111b0565b6103a8565b005b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61014461018e366004611239565b610616565b6101446101a1366004611272565b61077b565b6101446101b4366004611296565b61080f565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b6102036101ee36600461131b565b60056020526000908152604090205460ff1681565b604051610177919061134a565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b610144610245366004611372565b610978565b6102717f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610177565b6101446102973660046111b0565b610b01565b600054610271906001600160a01b031681565b6101446102bd3660046113b6565b610be2565b61016d6102d036600461131b565b60036020526000908152604090205481565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b61016d60015481565b61027161034736600461131b565b6004602052600090815260409020546001600160a01b031681565b610385610370366004611272565b60026020526000908152604090205460ff1681565b6040519015158152602001610177565b6101446103a33660046111b0565b610da9565b60006103b988888888888888610f33565b6000818152600360205260408120549192508190036103f357604051630f70cbe360e41b8152600481018390526024015b60405180910390fd5b6103fc81610fab565b61041957604051632fe1403160e21b815260040160405180910390fd5b6000828152600460205260408120546001600160a01b031690606461045e7f00000000000000000000000000000000000000000000000000000000000000008b61142b565b6104689190611448565b905061047384610fdf565b6104a76001600160a01b038c167f000000000000000000000000000000000000000000000000000000000000000083611019565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f7d3b58b84338f868f8e8e8e60405160200161051594939291909384526001600160a01b039283166020850152604084019190915216606082015260800190565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161054495949392919061146a565b6020604051808303816000875af1158015610563573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058791906114e4565b90506105be6001600160a01b038d167f00000000000000000000000000000000000000000000000000000000000000006000611019565b604080516001600160a01b0385811682526020820187905288169183918a917f611d2790eebc2dfbd3329eb8ce89302d94d2b42c489cfd3ba8dae42977a3f942910160405180910390a4505050505050505050505050565b6000546001600160a01b0316331461065f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016103ea565b8080156106f35750604051630daf9c2160e41b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063daf9c21090602401602060405180830381865afa1580156106cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f191906114fd565b155b1561071c576040516335e4dbd960e11b81526001600160a01b03831660048201526024016103ea565b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915591519182527fef81a9943b96c8df4ef243401c9bf5159146166211356898b52d382086168d92910160405180910390a25050565b6000546001600160a01b031633146107c45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016103ea565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b600061082089898989898989610f33565b9050600160008281526005602052604090205460ff16600281111561084757610847611334565b14610868576040516337d6ee8b60e11b8152600481018290526024016103ea565b858210156108895760405163122e33cf60e31b815260040160405180910390fd5b6000818152600360209081526040808320439055600482528083208054336001600160a01b031990911681179091556005835292819020805460ff19166002179055518481526001600160a01b03861692879290917f81f3dddde62cb8d590d391999bc1a4c362a03cf74718fb3bd8195b46fc1c1009910160405180910390a461091e6001600160a01b038916338785611096565b6000606461094c7f00000000000000000000000000000000000000000000000000000000000000008a61142b565b6109569190611448565b905061096c6001600160a01b038b163383611120565b50505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109c35760405163347b0c3360e11b81523360048201526024016103ea565b60008080806109d560e086018661151a565b8101906109e29190611568565b9350935093509350600060647f000000000000000000000000000000000000000000000000000000000000000086610a1a919061142b565b610a249190611448565b9050610a3660e0870160c088016115b2565b15610a7457610a6f610a4e6040880160208901611272565b82610a5f60808a0160608b01611272565b6001600160a01b03169190611120565b610a89565b610a898482610a5f60808a0160608b01611272565b6001600160a01b03821687847ff27fbe6db06bb8ac8a2b4206eef25be7c007d9fd8d53a772c5ffa4d7487952b2610ac660408b0160208c01611272565b610ad660e08c0160c08d016115b2565b604080516001600160a01b03909316835290151560208301520160405180910390a450505050505050565b336001600160a01b03821614610b2a57604051630e020a8960e31b815260040160405180910390fd5b6000610b3b88888888888888610f33565b9050600160008281526005602052604090205460ff166002811115610b6257610b62611334565b14610b835760405163069572a960e21b8152600481018290526024016103ea565b610b8c81610fdf565b816001600160a01b031681847f4aaea9d289fcf796ee2d93ab7730c9a0afa79d03debf6528dd7f13a83613b7f460405160405180910390a4610bd86001600160a01b0389168388611120565b5050505050505050565b6001600160a01b03851660009081526002602052604090205460ff16610c26576040516378abcf6760e11b81526001600160a01b03861660048201526024016103ea565b6001600160a01b03841660009081526002602052604090205460ff16610c6a576040516378abcf6760e11b81526001600160a01b03851660048201526024016103ea565b836001600160a01b0316856001600160a01b031603610c9c57604051636f8f06d360e01b815260040160405180910390fd5b821580610ca7575081155b15610cc5576040516305dc4f8360e21b815260040160405180910390fd5b6001600160a01b038116610cec576040516325f5bdf760e21b815260040160405180910390fd5b600154604080516001600160a01b0387811682526020820187905291810185905283821660608201523392918816907f8a923a6574cd5d908fa4e840c47fb64b874b2116a88d073e5fdbd834033932769060800160405180910390a46000610d5b868686868660015433610f33565b6000818152600560205260408120805460ff19166001908117909155805492935090610d86836115cf565b90915550610da190506001600160a01b038716333087611096565b505050505050565b6000610dba88888888888888610f33565b600081815260036020526040812054919250819003610def57604051630f70cbe360e41b8152600481018390526024016103ea565b610df881610fab565b15610e5f57600082815260036020526040812054610e1690436115e8565b610e40907f00000000000000000000000000000000000000000000000000000000000000006115e8565b905080604051637be8522f60e01b81526004016103ea91815260200190565b6000828152600460205260409020546001600160a01b0316610e8083610fdf565b60006064610eae7f0000000000000000000000000000000000000000000000000000000000000000826115e8565b610eb8908b61142b565b610ec29190611448565b9050610ed86001600160a01b038c168383611120565b846001600160a01b031686836001600160a01b03167fdeb6ee1bbbaaac1d6b7873a679d462110dd54d72915436622cc00525c2561cab86604051610f1e91815260200190565b60405180910390a45050505050505050505050565b6040516bffffffffffffffffffffffff19606089811b8216602084015288811b82166034840152604883018890526068830187905285811b82166088840152609c830185905283901b1660bc82015260009060d001604051602081830303815290604052805190602001209050979650505050505050565b6000610fd7827f00000000000000000000000000000000000000000000000000000000000000006115fb565b431092915050565b60009081526003602090815260408083208390556004825280832080546001600160a01b031916905560059091529020805460ff19169055565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806110905760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064016103ea565b50505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806111195760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016103ea565b5050505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806110905760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016103ea565b6001600160a01b03811681146111ad57600080fd5b50565b600080600080600080600060e0888a0312156111cb57600080fd5b87356111d681611198565b965060208801356111e681611198565b95506040880135945060608801359350608088013561120481611198565b925060a0880135915060c088013561121b81611198565b8091505092959891949750929550565b80151581146111ad57600080fd5b6000806040838503121561124c57600080fd5b823561125781611198565b915060208301356112678161122b565b809150509250929050565b60006020828403121561128457600080fd5b813561128f81611198565b9392505050565b600080600080600080600080610100898b0312156112b357600080fd5b88356112be81611198565b975060208901356112ce81611198565b9650604089013595506060890135945060808901356112ec81611198565b935060a0890135925060c089013561130381611198565b8092505060e089013590509295985092959890939650565b60006020828403121561132d57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061136c57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561138557600080fd5b82359150602083013567ffffffffffffffff8111156113a357600080fd5b8301610100818603121561126757600080fd5b600080600080600060a086880312156113ce57600080fd5b85356113d981611198565b945060208601356113e981611198565b93506040860135925060608601359150608086013561140781611198565b809150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761144257611442611415565b92915050565b60008261146557634e487b7160e01b600052601260045260246000fd5b500490565b600060018060a01b038088168352602081881681850152818716604085015285606085015260a06080850152845191508160a085015260005b828110156114bf5785810182015185820160c0015281016114a3565b5050600060c0828501015260c0601f19601f8301168401019150509695505050505050565b6000602082840312156114f657600080fd5b5051919050565b60006020828403121561150f57600080fd5b815161128f8161122b565b6000808335601e1984360301811261153157600080fd5b83018035915067ffffffffffffffff82111561154c57600080fd5b60200191503681900382131561156157600080fd5b9250929050565b6000806000806080858703121561157e57600080fd5b84359350602085013561159081611198565b92506040850135915060608501356115a781611198565b939692955090935050565b6000602082840312156115c457600080fd5b813561128f8161122b565b6000600182016115e1576115e1611415565b5060010190565b8181038181111561144257611442611415565b808201808211156114425761144261141556fea26469706673582212207ebce0f3d27945c68bf3f36c874c52000a09e8b45a8e5b43efa94c87ea2443dd64736f6c63430008110033";

type BookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Book__factory extends ContractFactory {
  constructor(...args: BookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _oracle: PromiseOrValue<string>,
    _safeBlockThreshold: PromiseOrValue<BigNumberish>,
    _disputeBondPct: PromiseOrValue<BigNumberish>,
    _tradeRebatePct: PromiseOrValue<BigNumberish>,
    _relayerRefundPct: PromiseOrValue<BigNumberish>,
    _feePct: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Book> {
    return super.deploy(
      _oracle,
      _safeBlockThreshold,
      _disputeBondPct,
      _tradeRebatePct,
      _relayerRefundPct,
      _feePct,
      overrides || {}
    ) as Promise<Book>;
  }
  override getDeployTransaction(
    _oracle: PromiseOrValue<string>,
    _safeBlockThreshold: PromiseOrValue<BigNumberish>,
    _disputeBondPct: PromiseOrValue<BigNumberish>,
    _tradeRebatePct: PromiseOrValue<BigNumberish>,
    _relayerRefundPct: PromiseOrValue<BigNumberish>,
    _feePct: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _oracle,
      _safeBlockThreshold,
      _disputeBondPct,
      _tradeRebatePct,
      _relayerRefundPct,
      _feePct,
      overrides || {}
    );
  }
  override attach(address: string): Book {
    return super.attach(address) as Book;
  }
  override connect(signer: Signer): Book__factory {
    return super.connect(signer) as Book__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BookInterface {
    return new utils.Interface(_abi) as BookInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Book {
    return new Contract(address, _abi, signerOrProvider) as Book;
  }
}
