/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AllKnowingOracle,
  AllKnowingOracleInterface,
} from "../../AllKnowingOracle.sol/AllKnowingOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FloodRegistry",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AllKnowingOracle__AlreadySettled",
    type: "error",
  },
  {
    inputs: [],
    name: "AllKnowingOracle__NonSettler",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AllKnowingOracle__RequestAlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
    ],
    name: "NewRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
    ],
    name: "RequestSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "RequesterWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "settler",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SettlerWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "TokenWhitelisted",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ask",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
    ],
    name: "getRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract FloodRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        internalType: "enum RequestState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
    ],
    name: "settle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "settlers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "settler",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "whitelistSettler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516113b73803806113b783398101604081905261002f916100da565b61003833610063565b336000908152600360205260409020805460ff191660011790556001600160a01b031660805261010a565b600180546001600160a01b03191690556100878161008a602090811b61086d17901c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ec57600080fd5b81516001600160a01b038116811461010357600080fd5b9392505050565b608051611293610124600039600060e301526112936000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063c70a900f11610071578063c70a900f1461015a578063e30c39781461018d578063e6717ce71461019e578063f2fde38b146101bf578063f7d3b58b146101d2578063fc361c38146101e557600080fd5b8063329e53be146100b9578063715018a6146100ce57806379ba5097146100d65780637b103999146100de5780638da5cb5b146101225780639d86698514610133575b600080fd5b6100cc6100c7366004610cc4565b6101f8565b005b6100cc61025f565b6100cc610273565b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b0316610105565b610146610141366004610cfb565b6102f2565b604051610119989796959493929190610d9c565b61017d610168366004610e02565b60036020526000908152604090205460ff1681565b6040519015158152602001610119565b6001546001600160a01b0316610105565b6101b16101ac366004610e24565b6103d8565b604051908152602001610119565b6100cc6101cd366004610e02565b6103f1565b6101b16101e0366004610e80565b610462565b6100cc6101f3366004610f2d565b6106c0565b6102006108bd565b6001600160a01b038216600081815260036020908152604091829020805460ff191685151590811790915591519182527f8cc72bec7e2cf5979aefd933f40a28eb590098d522a5c458e497e71c5e6fa90f910160405180910390a25050565b6102676108bd565b6102716000610917565b565b60015433906001600160a01b031681146102e65760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b6102ef81610917565b50565b600260208190526000918252604090912080546001820154928201546003830154600484015460058501546006860180546001600160a01b03968716988716979587169690941694929360ff808416946101009094041692919061035590610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461038190610f52565b80156103ce5780601f106103a3576101008083540402835291602001916103ce565b820191906000526020600020905b8154815290600101906020018083116103b157829003601f168201915b5050505050905088565b60006103e78686868686610930565b9695505050505050565b6103f96108bd565b600180546001600160a01b0383166001600160a01b0319909116811790915561042a6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60006104713388888888610930565b90506000808281526002602081905260409091206005015460ff169081111561049c5761049c610d14565b146104bd5760405163d5e880e960e01b8152600481018290526024016102dd565b6000604051806101000160405280336001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b031681526020018681526020016001600281111561052057610520610d14565b815260200160001515815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452505084815260026020818152604092839020855181546001600160a01b03199081166001600160a01b039283161783559287015160018084018054861692841692909217909155948701518285018054851691831691909117905560608701516003830180549094169116179091556080850151600482015560a085015160058201805496975087969295509093909260ff1990921691849081111561060c5761060c610d14565b021790555060c08201516005820180549115156101000261ff001990921691909117905560e082015160068201906106449082610ff0565b5050604080516001600160a01b03898116825260208201899052808b1693508b169185917f2609e116ca576195fecb47831f147fd6fee721377e4d88fff48807f3e9442a42910160405180910390a46106b533306106a38860026110b0565b6001600160a01b038a16929190610998565b509695505050505050565b3360009081526003602052604090205460ff166106f0576040516314e9dd3960e31b815260040160405180910390fd5b600082815260026020819052604090912090600582015460ff16600281111561071b5761071b610d14565b0361073c5760405163b677167760e01b8152600481018490526024016102dd565b60008160040154600261074f91906110b0565b60058301805461ffff19166101008615159081029190911760021790915560405190815290915084907fdbed7580b9c2829ee6b384e3833f10b16f9885601c98a01c40fd705b543e9c669060200160405180910390a282156107d157600182015460038301546107cc916001600160a01b03918216911683610a03565b6107f2565b600282015460038301546107f2916001600160a01b03918216911683610a03565b81546001600160a01b03163b1561086757815460405163734d162760e01b81526001600160a01b039091169063734d1627906108349087908690600401611158565b600060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b505050505b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146102715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102dd565b600180546001600160a01b03191690556102ef8161086d565b6040516bffffffffffffffffffffffff19606087811b8216602084015286811b8216603484015285811b8216604884015284901b16605c8201526070810182905260009060900160405160208183030381529060405280519060200120905095945050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526108679085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a38565b6040516001600160a01b038316602482015260448101829052610a3390849063a9059cbb60e01b906064016109cc565b505050565b6000610a8d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b0a9092919063ffffffff16565b805190915015610a335780806020019051810190610aab9190611211565b610a335760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102dd565b6060610b198484600085610b21565b949350505050565b606082471015610b825760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102dd565b600080866001600160a01b03168587604051610b9e919061122e565b60006040518083038185875af1925050503d8060008114610bdb576040519150601f19603f3d011682016040523d82523d6000602084013e610be0565b606091505b5091509150610bf187838387610bfc565b979650505050505050565b60608315610c6b578251600003610c64576001600160a01b0385163b610c645760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102dd565b5081610b19565b610b198383815115610c805781518083602001fd5b8060405162461bcd60e51b81526004016102dd919061124a565b80356001600160a01b0381168114610cb157600080fd5b919050565b80151581146102ef57600080fd5b60008060408385031215610cd757600080fd5b610ce083610c9a565b91506020830135610cf081610cb6565b809150509250929050565b600060208284031215610d0d57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60038110610d4857634e487b7160e01b600052602160045260246000fd5b9052565b60005b83811015610d67578181015183820152602001610d4f565b50506000910152565b60008151808452610d88816020860160208601610d4c565b601f01601f19169290920160200192915050565b6001600160a01b0389811682528881166020830152878116604083015286166060820152608081018590526000610100610dd960a0840187610d2a565b84151560c08401528060e0840152610df381840185610d70565b9b9a5050505050505050505050565b600060208284031215610e1457600080fd5b610e1d82610c9a565b9392505050565b600080600080600060a08688031215610e3c57600080fd5b610e4586610c9a565b9450610e5360208701610c9a565b9350610e6160408701610c9a565b9250610e6f60608701610c9a565b949793965091946080013592915050565b60008060008060008060a08789031215610e9957600080fd5b610ea287610c9a565b9550610eb060208801610c9a565b9450610ebe60408801610c9a565b935060608701359250608087013567ffffffffffffffff80821115610ee257600080fd5b818901915089601f830112610ef657600080fd5b813581811115610f0557600080fd5b8a6020828501011115610f1757600080fd5b6020830194508093505050509295509295509295565b60008060408385031215610f4057600080fd5b823591506020830135610cf081610cb6565b600181811c90821680610f6657607f821691505b602082108103610f8657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610a3357600081815260208120601f850160051c81016020861015610fc95750805b601f850160051c820191505b81811015610fe857828155600101610fd5565b505050505050565b815167ffffffffffffffff81111561100a5761100a610f8c565b61101e816110188454610f52565b84610fa2565b602080601f831160018114611053576000841561103b5750858301515b600019600386901b1c1916600185901b178555610fe8565b600085815260208120601f198616915b8281101561108257888601518255948401946001909101908401611063565b50858210156110a05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820281158282048414176110d557634e487b7160e01b600052601160045260246000fd5b92915050565b600081546110e881610f52565b808552602060018381168015611105576001811461111f5761114d565b60ff1985168884015283151560051b88018301955061114d565b866000528260002060005b858110156111455781548a820186015290830190840161112a565b890184019650505b505050505092915050565b828152604060208201526111876040820161117a84546001600160a01b031690565b6001600160a01b03169052565b600061119d60018401546001600160a01b031690565b6001600160a01b03908116606084015260028401548116608084015260038401541660a0830152600483015460c083015260058301546111e360e0840160ff8316610d2a565b6101006111f981850160ff8460081c1615159052565b61012084015250610b196101408301600685016110db565b60006020828403121561122357600080fd5b8151610e1d81610cb6565b60008251611240818460208701610d4c565b9190910192915050565b602081526000610e1d6020830184610d7056fea2646970667358221220de6cdf94fa620eb9254400f444d9701ad6c7acd3b7b709b96fc7782b978df81264736f6c63430008110033";

type AllKnowingOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllKnowingOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllKnowingOracle__factory extends ContractFactory {
  constructor(...args: AllKnowingOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _registry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AllKnowingOracle> {
    return super.deploy(
      _registry,
      overrides || {}
    ) as Promise<AllKnowingOracle>;
  }
  override getDeployTransaction(
    _registry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  override attach(address: string): AllKnowingOracle {
    return super.attach(address) as AllKnowingOracle;
  }
  override connect(signer: Signer): AllKnowingOracle__factory {
    return super.connect(signer) as AllKnowingOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllKnowingOracleInterface {
    return new utils.Interface(_abi) as AllKnowingOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AllKnowingOracle {
    return new Contract(address, _abi, signerOrProvider) as AllKnowingOracle;
  }
}
