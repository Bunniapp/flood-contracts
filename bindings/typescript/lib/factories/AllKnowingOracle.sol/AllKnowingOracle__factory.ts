/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AllKnowingOracle,
  AllKnowingOracleInterface,
} from "../../AllKnowingOracle.sol/AllKnowingOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FloodRegistry",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AllKnowingOracle__NonSettler",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AllKnowingOracle__NotSettleable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AllKnowingOracle__SettlerIsDisputerOrProposer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestIndex",
        type: "uint256",
      },
    ],
    name: "NewRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
    ],
    name: "RequestSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "RequesterWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "settler",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SettlerWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "TokenWhitelisted",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ask",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestIndex",
        type: "uint256",
      },
    ],
    name: "getRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract FloodRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        internalType: "enum RequestState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
    ],
    name: "settle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "settlers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "settler",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "whitelistSettler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100cd57601f61116638819003918201601f19168301916001600160401b038311848410176100d2578084926020946040528339810103126100cd57516001600160a01b039081811681036100cd57600180546001600160a01b03199081169091556000805491821633908117825560408051959093167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380600455338152600360205220600160ff1982541617905560805261107d90816100e98239608051816109510152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c8063329e53be14610b1357806355352f8214610ac05780635badbe4c14610aa2578063715018a614610a3d57806379ba5097146109805780637b1039991461093b5780638da5cb5b146109145780639d86698514610859578063c70a900f1461081a578063e30c3978146107f1578063f2fde38b14610784578063f7d3b58b146103315763fc361c38146100ac57600080fd5b3461032e57604036600319011261032e57600435906100c9610bd9565b91338252600360205260ff6040832054161561031c578082526002602052604082206005810180549460ff86166003811015610308576001036102ef57600283019060018060a01b039485835416331480156102e0575b6102c8576004850180549092600182901b916001600160ff1b038116036102b45761ffff1990991689151560081b61ff0016176002178555969795968896827fdbed7580b9c2829ee6b384e3833f10b16f9885601c98a01c40fd705b543e9c6660206040518415158152a21561029a576101a890886003880154168960018901541690610f86565b8685541693843b6101b7578680f35b843b1561029657879560ff6102459289956040519b8c9a8b998a9863734d162760e01b8a5260048a0152604060248a01528b60448a01528160018801541660648a01525416608488015260038501541660a48701525460c48601525461022260e48601838316610cf0565b60081c161515610104840152610100610124840152600661014484019101610c22565b03925af1801561028b5761025f575b818180808080808680f35b67ffffffffffffffff81116102775760405238610254565b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b8680fd5b6102af90886003880154168986541690610f86565b6101a8565b634e487b7160e01b89526011600452602489fd5b602490604051906371ced53d60e01b82526004820152fd5b50856001860154163314610120565b604051631ad52b9b60e11b815260048101859052602490fd5b634e487b7160e01b86526021600452602486fd5b6040516314e9dd3960e31b8152600490fd5b80fd5b503461032e5760a036600319011261032e5761034b610b92565b610353610bad565b9061035c610bc3565b9067ffffffffffffffff60843511610780573660236084350112156107805767ffffffffffffffff6084356004013511610780573660246084356004013560843501011161078057600454926103b88460643585848633610fd8565b93600019811461067457600101600455604051610100810181811067ffffffffffffffff82111761076c5760409081523382526001600160a01b03848116602084015283811691830191909152841660608201526064356080820152600160a082015260c0810186905261043160046084350135610dab565b61043e6040519182610cb8565b6084356004810135808352906024016020830137866020608435600401358301015260e082019081528587526002602052604087209160018060a01b038151166bffffffffffffffffffffffff60a01b90818554161784556001840160018060a01b03602084015116828254161790556002840160018060a01b0360408401511682825416179055600384019060018060a01b036060840151169082541617905560808101516004840155600583019060a0810151600381101561075857825460c09092015161ffff1990921660ff9091161790151560081b61ff00161790555180519067ffffffffffffffff82116107445761053e6006840154610be8565b601f8111610700575b50602090601f83116001146106935760069291899183610688575b50508160011b916000199060031b1c1916179101555b60045460001981019190821161067457604080516001600160a01b03868116825260643560208301529181019390935290811692169084907fb10e0c42d0d8cd4a999f95c50d18109fb205fdf5e55a8ed89121cab7f9f65f6990606090a46064356001600160ff1b0381169003610660576040516323b872dd60e01b60208201523360248201523060448201526064803560011b8183015281529260a084019067ffffffffffffffff82118583101761064c5750604052602092610644916001600160a01b0316610dc7565b604051908152f35b634e487b7160e01b81526041600452602490fd5b634e487b7160e01b83526011600452602483fd5b634e487b7160e01b86526011600452602486fd5b015190503880610562565b906006840189526020892091895b601f19851681106106e85750918391600193600695601f198116106106cf575b505050811b01910155610578565b015160001960f88460031b161c191690553880806106c1565b919260206001819286850151815501940192016106a1565b60068401895260208920601f840160051c81016020851061073d575b601f830160051c82018110610732575050610547565b8a815560010161071c565b508061071c565b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b8a52602160045260248afd5b634e487b7160e01b87526041600452602487fd5b8380fd5b503461032e57602036600319011261032e5761079e610b92565b6107a6610d53565b600180546001600160a01b0319166001600160a01b0392831690811790915582549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b503461032e578060031936011261032e576001546040516001600160a01b039091168152602090f35b503461032e57602036600319011261032e5760209060ff906040906001600160a01b03610845610b92565b168152600384522054166040519015158152f35b503461032e57602036600319011261032e57604090600435815260026020522060018060a01b0390610910600660ff8484541693856001820154169580600283015416906003830154166004830154916108c96005850154946108c26040518099819301610c22565b0387610cb8565b604051988998895260208901526040880152606087015260808601526108f460a08601838316610cf0565b60081c16151560c08401526101008060e0850152830190610d13565b0390f35b503461032e578060031936011261032e57546040516001600160a01b039091168152602090f35b503461032e578060031936011261032e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461032e578060031936011261032e576001546001600160a01b0333818316036109e6576001600160a01b031991821660015582543392811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608490fd5b503461032e578060031936011261032e57610a56610d53565b600180546001600160a01b03199081169091558154908116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461032e578060031936011261032e576020600454604051908152f35b503461032e5760c036600319011261032e57610ada610b92565b610ae2610bad565b91610aeb610bc3565b606435916001600160a01b038316830361032e57602061064460a43560843586868a8a610fd8565b503461032e57604036600319011261032e57610b2d610b92565b7f8cc72bec7e2cf5979aefd933f40a28eb590098d522a5c458e497e71c5e6fa90f6020610b58610bd9565b92610b61610d53565b6001600160a01b0316808552600382526040808620805460ff191695151560ff81169690961790555193845292a280f35b600435906001600160a01b0382168203610ba857565b600080fd5b602435906001600160a01b0382168203610ba857565b604435906001600160a01b0382168203610ba857565b602435908115158203610ba857565b90600182811c92168015610c18575b6020831014610c0257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610bf7565b9060009291805491610c3383610be8565b918282526001938481169081600014610c955750600114610c55575b50505050565b90919394506000526020928360002092846000945b838610610c81575050505001019038808080610c4f565b805485870183015294019385908201610c6a565b9294505050602093945060ff191683830152151560051b01019038808080610c4f565b90601f8019910116810190811067ffffffffffffffff821117610cda57604052565b634e487b7160e01b600052604160045260246000fd5b906003821015610cfd5752565b634e487b7160e01b600052602160045260246000fd5b919082519283825260005b848110610d3f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610d1e565b6000546001600160a01b03163303610d6757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff8111610cda57601f01601f191660200190565b60018060a01b031690604051604081019080821067ffffffffffffffff831117610cda57610e57916040526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af13d15610ee5573d91610e3c83610dab565b92610e4a6040519485610cb8565b83523d868885013e610ee9565b805180610e645750505050565b81849181010312610ee1578201519081159182150361032e5750610e8a57808080610c4f565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b5080fd5b6060915b91929015610f4b5750815115610efd575090565b3b15610f065790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610f5e5750805190602001fd5b60405162461bcd60e51b815260206004820152908190610f82906024830190610d13565b0390fd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152608081019167ffffffffffffffff831182841017610cda57610fd692604052610dc7565b565b939194926040519460208601966bffffffffffffffffffffffff19809481809460601b168a5260601b16603488015260601b16604886015260601b16605c840152607083015260908201526090815260c0810181811067ffffffffffffffff821117610cda576040525190209056fea264697066735822122027bd756cfcbc933f74e92a7fa634dc3deb3830f33b6eece5b955bff33f07a72164736f6c63430008110033";

type AllKnowingOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllKnowingOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllKnowingOracle__factory extends ContractFactory {
  constructor(...args: AllKnowingOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _registry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AllKnowingOracle> {
    return super.deploy(
      _registry,
      overrides || {}
    ) as Promise<AllKnowingOracle>;
  }
  override getDeployTransaction(
    _registry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  override attach(address: string): AllKnowingOracle {
    return super.attach(address) as AllKnowingOracle;
  }
  override connect(signer: Signer): AllKnowingOracle__factory {
    return super.connect(signer) as AllKnowingOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllKnowingOracleInterface {
    return new utils.Interface(_abi) as AllKnowingOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AllKnowingOracle {
    return new Contract(address, _abi, signerOrProvider) as AllKnowingOracle;
  }
}
