/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BookSingleChain,
  BookSingleChainInterface,
} from "../../BookSingleChain.sol/BookSingleChain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_safeBlockThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_disputeBondPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tradeRebatePct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerRefundPct",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BookSingleChain__AmountOutTooLow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blocksLeft",
        type: "uint256",
      },
    ],
    name: "BookSingleChain__DisputePeriodNotOver",
    type: "error",
  },
  {
    inputs: [],
    name: "BookSingleChain__DisputePeriodOver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "BookSingleChain__FeePctTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "BookSingleChain__InvalidFeeCombination",
    type: "error",
  },
  {
    inputs: [],
    name: "BookSingleChain__InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "BookSingleChain__InvalidToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "BookSingleChain__MaliciousCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BookSingleChain__SameToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BookSingleChain__SentToBlackHole",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "BookSingleChain__TradeNotFilled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "BookSingleChain__TradeNotInFillableState",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "BookSingleChain__UnsafeTokenToWhitelist",
    type: "error",
  },
  {
    inputs: [],
    name: "BookSingleChain__ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "disputeBondPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tradeRebatePct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relayerRefundPct",
        type: "uint256",
      },
    ],
    name: "FeeCombinationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSafeBlockThreshold",
        type: "uint256",
      },
    ],
    name: "SafeBlockThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "TokenWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "disputeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
    ],
    name: "TradeDisputeSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "disputeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
    ],
    name: "TradeDisputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "TradeFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
    ],
    name: "TradeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filledAtBlock",
        type: "uint256",
      },
    ],
    name: "TradeSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFeePct",
        type: "uint256",
      },
    ],
    name: "UpdatedFeeForTrade",
    type: "event",
  },
  {
    inputs: [],
    name: "disputeBondPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
    ],
    name: "disputeTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountToSend",
        type: "uint256",
      },
    ],
    name: "fillTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountToSend",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newFeePct",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "traderSignature",
        type: "bytes",
      },
    ],
    name: "fillTradeWithUpdatedFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "filledAtBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "filledBy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfTrades",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract ERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "enum RequestState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "answer",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "onPriceSettled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract AllKnowingOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerRefundPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "requestTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "safeBlockThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
    ],
    name: "settleTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeRebatePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newFeePct",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "traderSignature",
        type: "bytes",
      },
    ],
    name: "updateFeeForTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "whitelistToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61012060405260006001553480156200001757600080fd5b5060405162001f7c38038062001f7c8339810160408190526200003a9162000156565b600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506001600160a01b0385166101005260808490526040518481527f882885d0e4612a71677644a9d70e58ca05fc5a1ea1b0875f6e46c315241bfe149060200160405180910390a180620000ce8385620001ad565b620000da9190620001ad565b606414620000fb5760405163bcf1e5b360e01b815260040160405180910390fd5b60a083905260c082905260e081905260408051848152602081018490529081018290527ff33486d12ebec978385318eaf8163e096679d7eab14d4def8f26b7a5fda0f5829060600160405180910390a15050505050620001d4565b600080600080600060a086880312156200016f57600080fd5b85516001600160a01b03811681146200018757600080fd5b602087015160408801516060890151608090990151929a91995097965090945092505050565b60008219821115620001cf57634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c05160e05161010051611d0f6200026d6000396000818161021f015281816103fc015281816106dc01528181610705015281816107e8015261086c0152600081816101d201528181610d6001526110060152600081816102a401526108da0152600081816101ab0152610664015260008181610136015281816105fd01528181610c830152610cd10152611d0f6000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80639501325f116100ad578063cd805d5e11610071578063cd805d5e146102ec578063d70e3dfd146102f5578063daf9c2101461031e578063ee35a4f914610351578063f7b637bb1461036457600080fd5b80639501325f1461026c578063ad3e76251461028c578063c16402bb1461029f578063c3f6f431146102c6578063cb7b1ec8146102d957600080fd5b806353906a59116100f457806353906a59146101cd57806369cf50c1146101f4578063734d1627146102075780637dc0d1d01461021a5780638da5cb5b1461025957600080fd5b80630ff0c00e146101315780630ffb1d8b1461016b57806313af4035146101805780631655b32314610193578063391fe4e2146101a6575b600080fd5b6101587f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61017e6101793660046116ee565b610387565b005b61017e61018e366004611727565b6104f1565b61017e6101a136600461174b565b610585565b6101587f000000000000000000000000000000000000000000000000000000000000000081565b6101587f000000000000000000000000000000000000000000000000000000000000000081565b61017e6102023660046117c5565b6105b5565b61017e610215366004611837565b610861565b6102417f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610162565b600054610241906001600160a01b031681565b61015861027a36600461187b565b60036020526000908152604090205481565b61017e61029a366004611894565b6109d5565b6101587f000000000000000000000000000000000000000000000000000000000000000081565b61017e6102d436600461193d565b610bc9565b61017e6102e73660046117c5565b610c3b565b61015860015481565b61024161030336600461187b565b6004602052600090815260409020546001600160a01b031681565b61034161032c366004611727565b60026020526000908152604090205460ff1681565b6040519015158152602001610162565b61017e61035f366004611a01565b610e00565b61034161037236600461187b565b60056020526000908152604090205460ff1681565b6000546001600160a01b031633146103d55760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b8080156104695750604051630daf9c2160e41b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063daf9c21090602401602060405180830381865afa158015610443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104679190611ad1565b155b15610492576040516313c42eef60e21b81526001600160a01b03831660048201526024016103cc565b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915591519182527fef81a9943b96c8df4ef243401c9bf5159146166211356898b52d382086168d92910160405180910390a25050565b6000546001600160a01b0316331461053a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016103cc565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b600061059689898989898989610e85565b90506105aa89898989898989888a33610ef3565b505050505050505050565b60006105c688888888888888610e85565b6000818152600360205260408120549192508190036105fb5760405163cc4f06a160e01b8152600481018390526024016103cc565b7f00000000000000000000000000000000000000000000000000000000000000006106268243611b04565b1061064457604051632c02744560e11b815260040160405180910390fd5b6000828152600460205260408120546001600160a01b03169060646106897f00000000000000000000000000000000000000000000000000000000000000008b611b1b565b6106939190611b3a565b60008581526003602090815260408083208390556004825280832080546001600160a01b031916905560059091529020805460ff1916905590506107016001600160a01b038c167f000000000000000000000000000000000000000000000000000000000000000083611058565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f7d3b58b84338f868f8d8d604051602001610765939291909283526001600160a01b03919091166020830152604082015260600190565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610794959493929190611b5c565b6020604051808303816000875af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190611bdd565b905061080e6001600160a01b038d167f00000000000000000000000000000000000000000000000000000000000000006000611058565b8086846001600160a01b03167f3ce24c6eab720bcebe9baf9d21eee3175218126f896eb40e25675b054f19a40f8760405161084b91815260200190565b60405180910390a4505050505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108ac5760405163179a2eb160e01b81523360048201526024016103cc565b600080806108bd60e0850185611bf6565b8101906108ca9190611c3d565b91945092509050600060646108ff7f000000000000000000000000000000000000000000000000000000000000000086611b1b565b6109099190611b3a565b905061091b60e0860160c08701611c75565b15610959576109546109336040870160208801611727565b826109446080890160608a01611727565b6001600160a01b031691906110d5565b61096e565b61096e83826109446080890160608a01611727565b85826109806040880160208901611727565b6001600160a01b03167f5346d9dd24f7f5e01b23ca4dada136d909acecf7ff9e4ed41474140d5d1319f66109ba60e08a0160c08b01611c75565b604051901515815260200160405180910390a4505050505050565b6001600160a01b03861660009081526002602052604090205460ff16610a195760405163f602627d60e01b81526001600160a01b03871660048201526024016103cc565b6001600160a01b03851660009081526002602052604090205460ff16610a5d5760405163f602627d60e01b81526001600160a01b03861660048201526024016103cc565b846001600160a01b0316866001600160a01b031603610a8f57604051631d2792fb60e31b815260040160405180910390fd5b6703782dace9d90000821115610abb576040516305bf279d60e41b8152600481018390526024016103cc565b831580610ac6575082155b15610ae45760405163abc5ee6f60e01b815260040160405180910390fd5b6001600160a01b038116610b0b57604051631feef77d60e01b815260040160405180910390fd5b60015460408051868152602081018690529081018490526001600160a01b03838116606083015280881691908916907ff4650f30e27746417929b97bf256a6022b15957ffef5971ddbe48867d9e01d459060800160405180910390a46000610b7a878787878787600154610e85565b6000818152600560205260408120805460ff19166001908117909155805492935090610ba583611c92565b90915550610bc090506001600160a01b03881633308861114d565b50505050505050565b6000610bda8c8c8c8c8c8c8c610e85565b9050610be985828686866111d7565b85856001600160a01b03167f6ab91dbc42f726b630639350395426be048c50255f12e82d28e2dffac417459386604051610c2591815260200190565b60405180910390a3505050505050505050505050565b6000610c4c88888888888888610e85565b600081815260036020526040812054919250819003610c815760405163cc4f06a160e01b8152600481018390526024016103cc565b7f0000000000000000000000000000000000000000000000000000000000000000610cac8243611b04565b1015610d1457600082815260036020526040812054610ccb9043611b04565b610cf5907f0000000000000000000000000000000000000000000000000000000000000000611b04565b9050806040516325797e0360e11b81526004016103cc91815260200190565b600082815260046020908152604080832080546003845282852085905581546001600160a01b03191690915560059092528220805460ff191690556001600160a01b0316906064610d857f000000000000000000000000000000000000000000000000000000000000000082611b04565b610d8f908b611b1b565b610d999190611b3a565b9050610daf6001600160a01b038c1683836110d5565b84826001600160a01b03167f32b1eeadbe2d36ad64238ef29d8064aedff6d8150cf1f0c4d6617bae1c00d92685604051610deb91815260200190565b60405180910390a35050505050505050505050565b6000610e118d8d8d8d8d8d8d610e85565b9050610e2085828686866111d7565b86856001600160a01b03167f6ab91dbc42f726b630639350395426be048c50255f12e82d28e2dffac417459386604051610e5c91815260200190565b60405180910390a3610e768d8d8d8d888d8d888e33610ef3565b50505050505050505050505050565b604080516bffffffffffffffffffffffff196060998a1b8116602080840191909152988a1b81166034830152604882019790975260688101959095526088850193909352951b90921660a882015260bc808201949094528151808203909401845260dc019052815191012090565b60008381526005602052604090205460ff16610f2557604051636074a2a360e11b8152600481018490526024016103cc565b60008381526003602052604090205415610f5557604051636074a2a360e11b8152600481018490526024016103cc565b86821015610f765760405163a53754a760e01b815260040160405180910390fd5b6000838152600360209081526040808320439055600482529182902080546001600160a01b0319166001600160a01b0385169081179091558251898152918201859052869290917f942417ccf4f356e8d909c054f8a8147622647605cbeafd9c63b4fc3cc1dd2a53910160405180910390a3610ffd6001600160a01b038a1682878561114d565b6000606461102b7f00000000000000000000000000000000000000000000000000000000000000008b611b1b565b6110359190611b3a565b905061104b6001600160a01b038c1683836110d5565b5050505050505050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806110cf5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064016103cc565b50505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806110cf5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016103cc565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806111d05760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016103cc565b5050505050565b6703782dace9d90000831115611203576040516305bf279d60e41b8152600481018490526024016103cc565b6000848152600360205260409020541561123357604051636074a2a360e11b8152600481018590526024016103cc565b604080517f582b2ba4cf2b931b2e1a054db15a958a1d2222e9e884ffc3c15f79da7d0177ba6020808301919091528183018790526060808301879052835180840390910181526080830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a084015260bc8084018290528451808503909101815260dc9093019093528151910120600061130c8286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061134a92505050565b9050876001600160a01b0316816001600160a01b031614611340576040516324a0dbd760e21b815260040160405180910390fd5b5050505050505050565b6000806000611359858561136e565b91509150611366816113dc565b509392505050565b60008082516041036113a45760208301516040840151606085015160001a61139887828585611595565b945094505050506113d5565b82516040036113cd57602083015160408401516113c2868383611682565b9350935050506113d5565b506000905060025b9250929050565b60008160048111156113f0576113f0611cab565b036113f85750565b600181600481111561140c5761140c611cab565b036114595760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103cc565b600281600481111561146d5761146d611cab565b036114ba5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103cc565b60038160048111156114ce576114ce611cab565b036115265760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103cc565b600481600481111561153a5761153a611cab565b036115925760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103cc565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156115cc5750600090506003611679565b8460ff16601b141580156115e457508460ff16601c14155b156115f55750600090506004611679565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611649573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661167257600060019250925050611679565b9150600090505b94509492505050565b6000806001600160ff1b0383168161169f60ff86901c601b611cc1565b90506116ad87828885611595565b935093505050935093915050565b6001600160a01b038116811461159257600080fd5b80356116db816116bb565b919050565b801515811461159257600080fd5b6000806040838503121561170157600080fd5b823561170c816116bb565b9150602083013561171c816116e0565b809150509250929050565b60006020828403121561173957600080fd5b8135611744816116bb565b9392505050565b600080600080600080600080610100898b03121561176857600080fd5b8835611773816116bb565b97506020890135611783816116bb565b965060408901359550606089013594506080890135935060a08901356117a8816116bb565b979a969950949793969295929450505060c08201359160e0013590565b600080600080600080600060e0888a0312156117e057600080fd5b87356117eb816116bb565b965060208801356117fb816116bb565b955060408801359450606088013593506080880135925060a0880135611820816116bb565b8092505060c0880135905092959891949750929550565b6000806040838503121561184a57600080fd5b82359150602083013567ffffffffffffffff81111561186857600080fd5b8301610100818603121561171c57600080fd5b60006020828403121561188d57600080fd5b5035919050565b60008060008060008060c087890312156118ad57600080fd5b86356118b8816116bb565b955060208701356118c8816116bb565b945060408701359350606087013592506080870135915060a08701356118ed816116bb565b809150509295509295509295565b60008083601f84011261190d57600080fd5b50813567ffffffffffffffff81111561192557600080fd5b6020830191508360208285010111156113d557600080fd5b60008060008060008060008060008060006101408c8e03121561195f57600080fd5b8b3561196a816116bb565b9a5060208c013561197a816116bb565b995060408c0135985060608c0135975060808c0135965060a08c013561199f816116bb565b955060c08c0135945060e08c01356119b6816116bb565b93506101008c013592506101208c013567ffffffffffffffff8111156119db57600080fd5b6119e78e828f016118fb565b915080935050809150509295989b509295989b9093969950565b6000806000806000806000806000806000806101608d8f031215611a2457600080fd5b611a2e8d356116bb565b8c359b50611a3f60208e01356116bb565b60208d01359a5060408d0135995060608d0135985060808d01359750611a6760a08e016116d0565b965060c08d0135955060e08d01359450611a846101008e016116d0565b93506101208d0135925067ffffffffffffffff6101408e01351115611aa857600080fd5b611ab98e6101408f01358f016118fb565b81935080925050509295989b509295989b509295989b565b600060208284031215611ae357600080fd5b8151611744816116e0565b634e487b7160e01b600052601160045260246000fd5b600082821015611b1657611b16611aee565b500390565b6000816000190483118215151615611b3557611b35611aee565b500290565b600082611b5757634e487b7160e01b600052601260045260246000fd5b500490565b600060018060a01b038088168352602081881681850152818716604085015285606085015260a06080850152845191508160a085015260005b82811015611bb15785810182015185820160c001528101611b95565b82811115611bc357600060c084870101525b5050601f01601f19169190910160c0019695505050505050565b600060208284031215611bef57600080fd5b5051919050565b6000808335601e19843603018112611c0d57600080fd5b83018035915067ffffffffffffffff821115611c2857600080fd5b6020019150368190038213156113d557600080fd5b600080600060608486031215611c5257600080fd5b833592506020840135611c64816116bb565b929592945050506040919091013590565b600060208284031215611c8757600080fd5b8135611744816116e0565b600060018201611ca457611ca4611aee565b5060010190565b634e487b7160e01b600052602160045260246000fd5b60008219821115611cd457611cd4611aee565b50019056fea264697066735822122069a687f951594f2417b996830924214228e92f674e950e068f910b1a7838c3be64736f6c634300080f0033";

type BookSingleChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BookSingleChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BookSingleChain__factory extends ContractFactory {
  constructor(...args: BookSingleChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _oracle: PromiseOrValue<string>,
    _safeBlockThreshold: PromiseOrValue<BigNumberish>,
    _disputeBondPct: PromiseOrValue<BigNumberish>,
    _tradeRebatePct: PromiseOrValue<BigNumberish>,
    _relayerRefundPct: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BookSingleChain> {
    return super.deploy(
      _oracle,
      _safeBlockThreshold,
      _disputeBondPct,
      _tradeRebatePct,
      _relayerRefundPct,
      overrides || {}
    ) as Promise<BookSingleChain>;
  }
  override getDeployTransaction(
    _oracle: PromiseOrValue<string>,
    _safeBlockThreshold: PromiseOrValue<BigNumberish>,
    _disputeBondPct: PromiseOrValue<BigNumberish>,
    _tradeRebatePct: PromiseOrValue<BigNumberish>,
    _relayerRefundPct: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _oracle,
      _safeBlockThreshold,
      _disputeBondPct,
      _tradeRebatePct,
      _relayerRefundPct,
      overrides || {}
    );
  }
  override attach(address: string): BookSingleChain {
    return super.attach(address) as BookSingleChain;
  }
  override connect(signer: Signer): BookSingleChain__factory {
    return super.connect(signer) as BookSingleChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BookSingleChainInterface {
    return new utils.Interface(_abi) as BookSingleChainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BookSingleChain {
    return new Contract(address, _abi, signerOrProvider) as BookSingleChain;
  }
}
