/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFloodRecipient,
  IFloodRecipientInterface,
} from "../../ICallbacks.sol/IFloodRecipient";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        internalType: "uint128",
        name: "amountReceived",
        type: "uint128",
      },
      {
        internalType: "bytes32",
        name: "tradeId",
        type: "bytes32",
      },
    ],
    name: "onTradeFilled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFloodRecipient__factory {
  static readonly abi = _abi;
  static createInterface(): IFloodRecipientInterface {
    return new utils.Interface(_abi) as IFloodRecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFloodRecipient {
    return new Contract(address, _abi, signerOrProvider) as IFloodRecipient;
  }
}
