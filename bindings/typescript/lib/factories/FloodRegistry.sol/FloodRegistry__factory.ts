/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FloodRegistry,
  FloodRegistryInterface,
} from "../../FloodRegistry.sol/FloodRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH9",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FloodRegistry__InvalidInputLength",
    type: "error",
  },
  {
    inputs: [],
    name: "FloodRegistry__InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "FloodRegistry__TokenAlreadyWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "FloodRegistry__TokenNotWhitelisted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract AllKnowingOracle",
        name: "oracle",
        type: "address",
      },
    ],
    name: "OracleChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "TokenWhitelisted",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "enabled",
        type: "bool[]",
      },
    ],
    name: "batchWhitelistTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestOracle",
    outputs: [
      {
        internalType: "contract AllKnowingOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AllKnowingOracle",
        name: "oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "whitelistToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistedTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b67380380610b6783398101604081905261002f916100c0565b61003833610049565b6001600160a01b03166080526100f0565b600180546001600160a01b031916905561006d81610070602090811b6104c217901c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d257600080fd5b81516001600160a01b03811681146100e957600080fd5b9392505050565b608051610a5c61010b600039600061017a0152610a5c6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637adbf9731161008c578063b5af090f11610066578063b5af090f1461019c578063dfdc4962146101bf578063e30c3978146101d5578063f2fde38b146101e657600080fd5b80637adbf973146101515780638da5cb5b14610164578063ad5c46481461017557600080fd5b80630ffb1d8b146100d45780632eae4f60146100e957806339063c63146101195780635e1762a01461012c578063715018a61461014157806379ba509714610149575b600080fd5b6100e76100e2366004610846565b6101f9565b005b6004546100fc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e76101273660046108c7565b61023a565b61013461032d565b6040516101109190610933565b6100e761033e565b6100e7610352565b6100e761015f366004610980565b6103d1565b6000546001600160a01b03166100fc565b6100fc7f000000000000000000000000000000000000000000000000000000000000000081565b6101af6101aa366004610980565b610423565b6040519015158152602001610110565b6101c7610445565b604051908152602001610110565b6001546001600160a01b03166100fc565b6100e76101f4366004610980565b610451565b610201610512565b816001600160a01b03163b60000361022c57604051631564b84560e21b815260040160405180910390fd5b610236828261056c565b5050565b610242610512565b8281146102625760405163046a41b360e31b815260040160405180910390fd5b60005b838110156103265784848281811061027f5761027f61099d565b90506020020160208101906102949190610980565b6001600160a01b03163b6000036102be57604051631564b84560e21b815260040160405180910390fd5b6103148585838181106102d3576102d361099d565b90506020020160208101906102e89190610980565b8484848181106102fa576102fa61099d565b905060200201602081019061030f91906109b3565b61056c565b8061031e816109e4565b915050610265565b5050505050565b6060610339600261061d565b905090565b610346610512565b6103506000610631565b565b60015433906001600160a01b031681146103c55760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b6103ce81610631565b50565b6103d9610512565b600480546001600160a01b0319166001600160a01b0383169081179091556040517f0e05ae75e8b926552cf6fcd744d19f422561e3ced1e426868730852702dbe41890600090a250565b6001600160a01b03811660009081526003602052604081205415155b92915050565b6000610339600261064a565b610459610512565b600180546001600160a01b0383166001600160a01b0319909116811790915561048a6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146103505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103bc565b80156105a557600061057f600284610654565b90508061059f5760405163f6d9d35960e01b815260040160405180910390fd5b506105d4565b60006105b2600284610669565b9050806105d257604051630ecc952760e01b815260040160405180910390fd5b505b816001600160a01b03167fef81a9943b96c8df4ef243401c9bf5159146166211356898b52d382086168d9282604051610611911515815260200190565b60405180910390a25050565b6060600061062a8361067e565b9392505050565b600180546001600160a01b03191690556103ce816104c2565b600061043f825490565b600061062a836001600160a01b0384166106da565b600061062a836001600160a01b038416610729565b6060816000018054806020026020016040519081016040528092919081815260200182805480156106ce57602002820191906000526020600020905b8154815260200190600101908083116106ba575b50505050509050919050565b60008181526001830160205260408120546107215750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561043f565b50600061043f565b6000818152600183016020526040812054801561081257600061074d6001836109fd565b8554909150600090610761906001906109fd565b90508181146107c65760008660000182815481106107815761078161099d565b90600052602060002001549050808760000184815481106107a4576107a461099d565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806107d7576107d7610a10565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061043f565b600091505061043f565b6001600160a01b03811681146103ce57600080fd5b8035801515811461084157600080fd5b919050565b6000806040838503121561085957600080fd5b82356108648161081c565b915061087260208401610831565b90509250929050565b60008083601f84011261088d57600080fd5b50813567ffffffffffffffff8111156108a557600080fd5b6020830191508360208260051b85010111156108c057600080fd5b9250929050565b600080600080604085870312156108dd57600080fd5b843567ffffffffffffffff808211156108f557600080fd5b6109018883890161087b565b9096509450602087013591508082111561091a57600080fd5b506109278782880161087b565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b818110156109745783516001600160a01b03168352928401929184019160010161094f565b50909695505050505050565b60006020828403121561099257600080fd5b813561062a8161081c565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156109c557600080fd5b61062a82610831565b634e487b7160e01b600052601160045260246000fd5b6000600182016109f6576109f66109ce565b5060010190565b8181038181111561043f5761043f6109ce565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b02fe844e52d1b91072bb77183a613ec9bc9286e8dc5cb6557ec5471a65d19b264736f6c63430008110033";

type FloodRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FloodRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FloodRegistry__factory extends ContractFactory {
  constructor(...args: FloodRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FloodRegistry> {
    return super.deploy(weth, overrides || {}) as Promise<FloodRegistry>;
  }
  override getDeployTransaction(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  override attach(address: string): FloodRegistry {
    return super.attach(address) as FloodRegistry;
  }
  override connect(signer: Signer): FloodRegistry__factory {
    return super.connect(signer) as FloodRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FloodRegistryInterface {
    return new utils.Interface(_abi) as FloodRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FloodRegistry {
    return new Contract(address, _abi, signerOrProvider) as FloodRegistry;
  }
}
