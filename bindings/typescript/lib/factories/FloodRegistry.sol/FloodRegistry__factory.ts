/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FloodRegistry,
  FloodRegistryInterface,
} from "../../FloodRegistry.sol/FloodRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH9",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FloodRegistry__InvalidInputLength",
    type: "error",
  },
  {
    inputs: [],
    name: "FloodRegistry__InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "FloodRegistry__TokenAlreadyWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "FloodRegistry__TokenNotWhitelisted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract AllKnowingOracle",
        name: "oracle",
        type: "address",
      },
    ],
    name: "OracleChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "TokenWhitelisted",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "enabled",
        type: "bool[]",
      },
    ],
    name: "batchWhitelistTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestOracle",
    outputs: [
      {
        internalType: "contract AllKnowingOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AllKnowingOracle",
        name: "oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "whitelistToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistedTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100b157601f610a4938819003918201601f19168301916001600160401b038311848410176100b6578084926020946040528339810103126100b157516001600160a01b039081811681036100b15760018060a01b03198060015416600155600054903390821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360805261097c90816100cd8239608051816101bc0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c9182630ffb1d8b146105b15782632eae4f601461058857826339063c631461048a5782635e1762a0146103a3578263715018a61461033e57826379ba50971461027e5782637adbf97314610213575081638da5cb5b146101eb578163ad5c4648146101a7578163b5af090f1461016d578163dfdc49621461014e578163e30c397814610121575063f2fde38b146100b257600080fd5b3461011e57602036600319011261011e576100cb610608565b6100d3610654565b600180546001600160a01b0319166001600160a01b0392831690811790915582549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b80fd5b90503461014a578160031936011261014a5760015490516001600160a01b039091168152602090f35b5080fd5b90503461014a578160031936011261014a576020906002549051908152f35b90503461014a57602036600319011261014a5760209181906001600160a01b03610195610608565b16815260038452205415159051908152f35b90503461014a578160031936011261014a57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90503461014a578160031936011261014a57905490516001600160a01b039091168152602090f35b83903461014a57602036600319011261014a5780356001600160a01b038116919082900361027a57610243610654565b80546001600160a01b031916821790557f0e05ae75e8b926552cf6fcd744d19f422561e3ced1e426868730852702dbe4188280a280f35b8280fd5b91503461027a578260031936011261027a57600154916001600160a01b039133838516036102e95750506001600160a01b031991821660015582543392811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152fd5b833461011e578060031936011261011e57610357610654565b600180546001600160a01b03199081169091558154908116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90833461011e578060031936011261011e57815180916002549384835260208093018095600284527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90845b868282106104765750505050849003601f01601f191684019567ffffffffffffffff871185881017610463575085815282865292518583018190528594938501939290915b82811061044357505050500390f35b83516001600160a01b031685528695509381019392810192600101610434565b634e487b7160e01b835260419052602482fd5b8354855290930192600192830192016103ef565b91503461027a578060031936011261027a5767ffffffffffffffff918035838111610584576104bc9036908301610623565b6024948535908111610580576104d59036908501610623565b9190926104e0610654565b82820361057057875b8281106104f4578880f35b6105076105028285856106ac565b6106d2565b3b156105605761051b6105028285856106ac565b6105268286886106ac565b35801515810361055c57610539916106e6565b600019811461054a576001016104e9565b634e487b7160e01b8952601186528789fd5b8a80fd5b8651631564b84560e21b81528690fd5b855163046a41b360e31b81528590fd5b8680fd5b8480fd5b9091503461027a578260031936011261027a575490516001600160a01b03909116815260209150f35b83823461014a578060031936011261014a576105cb610608565b602435918215158303610604576105e0610654565b813b156105f55750906105f2916106e6565b80f35b51631564b84560e21b81528490fd5b8380fd5b600435906001600160a01b038216820361061e57565b600080fd5b9181601f8401121561061e5782359167ffffffffffffffff831161061e576020808501948460051b01011161061e57565b6000546001600160a01b0316330361066857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b91908110156106bc5760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b038116810361061e5790565b811561074f576106fe6001600160a01b0382166107d8565b1561073d5760207fef81a9943b96c8df4ef243401c9bf5159146166211356898b52d382086168d92915b60405193151584526001600160a01b031692a2565b60405163f6d9d35960e01b8152600490fd5b6107616001600160a01b03821661085c565b1561078f5760207fef81a9943b96c8df4ef243401c9bf5159146166211356898b52d382086168d9291610728565b604051630ecc952760e01b8152600490fd5b6002548110156106bc5760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b600081815260036020526040812054610857576002546801000000000000000081101561084357908261082f610816846001604096016002556107a1565b819391549060031b600019811b9283911b169119161790565b905560025492815260036020522055600190565b634e487b7160e01b82526041600452602482fd5b905090565b6000818152600360205260408120549091908015610941576000199080820181811161092d5760025490838201918211610919578082036108e5575b50505060025480156108d1578101906108b0826107a1565b909182549160031b1b19169055600255815260036020526040812055600190565b634e487b7160e01b84526031600452602484fd5b6109036108f4610816936107a1565b90549060031b1c9283926107a1565b9055845260036020526040842055388080610898565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b50509056fea2646970667358221220861f1b669ee5e5bfee8a7ee295fca4fb47bc81ddeca59c0c0f31651f67905a2164736f6c63430008110033";

type FloodRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FloodRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FloodRegistry__factory extends ContractFactory {
  constructor(...args: FloodRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FloodRegistry> {
    return super.deploy(weth, overrides || {}) as Promise<FloodRegistry>;
  }
  override getDeployTransaction(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  override attach(address: string): FloodRegistry {
    return super.attach(address) as FloodRegistry;
  }
  override connect(signer: Signer): FloodRegistry__factory {
    return super.connect(signer) as FloodRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FloodRegistryInterface {
    return new utils.Interface(_abi) as FloodRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FloodRegistry {
    return new Contract(address, _abi, signerOrProvider) as FloodRegistry;
  }
}
